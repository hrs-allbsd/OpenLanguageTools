
/*
 * Copyright  2005 Sun Microsystems, Inc. 
 * All rights reserved Use is subject to license terms.
 *
 */

/*
 * File:           XliffHandlerImpl.java
 * Date:           July 24, 2004  3:24 PM
 *
 * @author  timf
 * @version generated by NetBeans XML module
 */
package org.jvnet.olt.filters.intstaroffice.xliff;

import org.xml.sax.*;

public class XliffHandlerImpl implements XliffHandler {
    
    public static final boolean DEBUG = false;
    
    private boolean isInternalStarOfficeXLIFF = false;
    
    public void start_mrk(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_mrk: " + meta);
    }
    
    public void handle_mrk(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_mrk: " + data);
    }
    
    public void end_mrk() throws SAXException {
        if (DEBUG) System.err.println("end_mrk()");
    }
    
    public void start_bin_unit(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_bin_unit: " + meta);
    }
    
    public void end_bin_unit() throws SAXException {
        if (DEBUG) System.err.println("end_bin_unit()");
    }
    
    public void start_sub(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_sub: " + meta);
    }
    
    public void handle_sub(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_sub: " + data);
    }
    
    public void end_sub() throws SAXException {
        if (DEBUG) System.err.println("end_sub()");
    }
    
    public void start_file(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_file: " + meta);
        String dataType = meta.getValue("datatype");
        String original = meta.getValue("original");
        if (dataType.equals("STAROFFICE") &&
            original.equals("from StarOffice translation database")){
                this.isInternalStarOfficeXLIFF = true;
        }
    }
    
    public void end_file() throws SAXException {
        if (DEBUG) System.err.println("end_file()");
    }
    
    public void start_target(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_target: " + meta);
    }
    
    public void handle_target(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_target: " + data);
    }
    
    public void end_target() throws SAXException {
        if (DEBUG) System.err.println("end_target()");
    }
    
    public void handle_internal_file(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_internal_file: " + data);
    }
    
    public void start_xliff(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_xliff: " + meta);
    }
    
    public void end_xliff() throws SAXException {
        if (DEBUG) System.err.println("end_xliff()");
    }
    
    public void handle_bx(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_bx: " + meta);
    }
    
    public void start_prop_group(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_prop_group: " + meta);
    }
    
    public void end_prop_group() throws SAXException {
        if (DEBUG) System.err.println("end_prop_group()");
    }
    
    public void handle_context(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_context: " + data);
    }
    
    public void start_skl(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_skl: " + meta);
    }
    
    public void end_skl() throws SAXException {
        if (DEBUG) System.err.println("end_skl()");
    }
    
    public void start_trans_unit(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_trans_unit: " + meta);
    }
    
    public void end_trans_unit() throws SAXException {
        if (DEBUG) System.err.println("end_trans_unit()");
    }
    
    public void start_phase(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_phase: " + meta);
    }
    
    public void end_phase() throws SAXException {
        if (DEBUG) System.err.println("end_phase()");
    }
    
    public void start_body(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_body: " + meta);
    }
    
    public void end_body() throws SAXException {
        if (DEBUG) System.err.println("end_body()");
    }
    
    public void start_group(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_group: " + meta);
    }
    
    public void end_group() throws SAXException {
        if (DEBUG) System.err.println("end_group()");
    }
    
    public void handle_prop(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_prop: " + data);
    }
    
    public void start_ept(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_ept: " + meta);
    }
    
    public void handle_ept(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_ept: " + data);
    }
    
    public void end_ept() throws SAXException {
        if (DEBUG) System.err.println("end_ept()");
    }
    
    public void start_header(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_header: " + meta);
    }
    
    public void end_header() throws SAXException {
        if (DEBUG) System.err.println("end_header()");
    }
    
    public void start_ph(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_ph: " + meta);
    }
    
    public void handle_ph(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_ph: " + data);
    }
    
    public void end_ph() throws SAXException {
        if (DEBUG) System.err.println("end_ph()");
    }
    
    public void start_g(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_g: " + meta);
    }
    
    public void handle_g(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_g: " + data);
    }
    
    public void end_g() throws SAXException {
        if (DEBUG) System.err.println("end_g()");
    }
    
    public void handle_note(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_note: " + data);
    }
    
    public void handle_ex(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_ex: " + meta);
    }
    
    public void start_phase_group(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_phase_group: " + meta);
    }
    
    public void end_phase_group() throws SAXException {
        if (DEBUG) System.err.println("end_phase_group()");
    }
    
    public void handle_external_file(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_external_file: " + meta);
    }
    
    public void start_alt_trans(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_alt_trans: " + meta);
    }
    
    public void end_alt_trans() throws SAXException {
        if (DEBUG) System.err.println("end_alt_trans()");
    }
    
    public void start_context_group(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_context_group: " + meta);
    }
    
    public void end_context_group() throws SAXException {
        if (DEBUG) System.err.println("end_context_group()");
    }
    
    public void start_bpt(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_bpt: " + meta);
    }
    
    public void handle_bpt(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_bpt: " + data);
    }
    
    public void end_bpt() throws SAXException {
        if (DEBUG) System.err.println("end_bpt()");
    }
    
    public void start_it(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_it: " + meta);
    }
    
    public void handle_it(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_it: " + data);
    }
    
    public void end_it() throws SAXException {
        if (DEBUG) System.err.println("end_it()");
    }
    
    public void start_count_group(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_count_group: " + meta);
    }
    
    public void end_count_group() throws SAXException {
        if (DEBUG) System.err.println("end_count_group()");
    }
    
    public void start_bin_source(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_bin_source: " + meta);
    }
    
    public void end_bin_source() throws SAXException {
        if (DEBUG) System.err.println("end_bin_source()");
    }
    
    public void start_glossary(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_glossary: " + meta);
    }
    
    public void end_glossary() throws SAXException {
        if (DEBUG) System.err.println("end_glossary()");
    }
    
    public void start_source(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_source: " + meta);
    }
    
    public void handle_source(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_source: " + data);
    }
    
    public void end_source() throws SAXException {
        if (DEBUG) System.err.println("end_source()");
    }
    
    public void handle_count(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_count: " + data);
    }
    
    public void handle_x(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_x: " + meta);
    }
    
    public void start_bin_target(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_bin_target: " + meta);
    }
    
    public void end_bin_target() throws SAXException {
        if (DEBUG) System.err.println("end_bin_target()");
    }
    
    public void start_reference(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_reference: " + meta);
    }
    
    public void end_reference() throws SAXException {
        if (DEBUG) System.err.println("end_reference()");
    }
    
    public boolean isInternalStarOfficeXLIFF() {
        return this.isInternalStarOfficeXLIFF;
    }
    
}

