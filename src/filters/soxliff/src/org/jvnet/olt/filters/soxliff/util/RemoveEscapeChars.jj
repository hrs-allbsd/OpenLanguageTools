/**
 * Remove escape characters from StarOffice tags
 *
 * Here is an example of the modification
 *
 * Input String:   \<tag param1=\"value1\" param2=\"value2\"\>text\</tag\>
 * Output string:<tag param1="value1" param2="value2">text</tag>
 * 
 */


options{
   //NODE_PACKAGE = "org.jvnet.olt.filters.soxliff.util";
   LOOKAHEAD = 10;
   FORCE_LA_CHECK = true;
   UNICODE_INPUT = true;
   STATIC = false;
}


PARSER_BEGIN(RemoveEscapeChars)

package org.jvnet.olt.filters.soxliff.util;

public class RemoveEscapeChars {
  
  private StringBuffer result = new StringBuffer("");

  public static String convert(String text) throws ParseException {

    RemoveEscapeChars t = new RemoveEscapeChars(new java.io.StringBufferInputStream(text));
    t.Start();
    return t.result.toString();

  }

  public static void main(String[] args) throws ParseException {

    if(args.length!=1) {
        System.err.println("RemoveEscapeChars <string_to_convert>");
        System.exit(1);
    }

    System.out.println(RemoveEscapeChars.convert(args[0]));
  }

}

PARSER_END(RemoveEscapeChars)

TOKEN :
{
  < TAG_OPEN: "\\<" > : TAG
|
  < DEFAULT_OTHER: ( ~["\\"]|"\\"~["<"] )+ >
}

<TAG> TOKEN :
{
  < START_SQUOTE: "\\\'" > : SATT
|
  < START_DQUOTE: "\\\"" > : DATT
|
  < TAG_CLOSE:  "\\>" > : DEFAULT
|
  < TAG_OTHER: ( ~["\\"]|"\\"~[">","\"","\'"] )+ >
}

<SATT> TOKEN :
{
  < STOP_SQUOTE: "\\\'" > : TAG
|
  < SATT_OTHER: ( ~["\\"]|"\\"~["\'"] )+ >
}

<DATT> TOKEN :
{
  < STOP_DQUOTE: "\\\"" > : TAG
|
  < DATT_OTHER: ( ~["\\"]|"\\"~["\""] )+ >
}

void Start() : 
{
    Token t;
}
{
  (
     Tag()
     |
     t=<DEFAULT_OTHER>  { result.append(t.image); }
  )+
  <EOF>
}


void Tag() :
{
   Token t;
}
{
    t=<TAG_OPEN> { result.append(t.image.substring(1)); }
    (
        t=<TAG_OTHER> { result.append(t.image); }
        |
        Att()
    )+
    t=<TAG_CLOSE> { result.append(t.image.substring(1));  }
}

void Att() :
{
    Token t;
}
{
    (
        t=<START_SQUOTE> { result.append(t.image.substring(1)); }
        (
            t=<SATT_OTHER> { result.append(t.image); }
        )?
        t=<STOP_SQUOTE> { result.append(t.image.substring(1)); }
    )
    |
    (
        t=<START_DQUOTE> { result.append(t.image.substring(1)); }
        (
            t=<DATT_OTHER> { result.append(t.image); }
        )?
        t=<STOP_DQUOTE> { result.append(t.image.substring(1)); }
    )
}

