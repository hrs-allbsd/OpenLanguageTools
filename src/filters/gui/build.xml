<?xml version="1.0" encoding="UTF-8"?>

<!-- this is a child build script -->

<project name="gui" basedir="." default="all">
    <import file="../../../common.xml"/>

    <property name="installer.dir" value="${build.dir}/installer"/>
    <!-- IzPack setup -->
    <property name="IZPACK_HOME" value="${lib.dir}/IzPack-3.9.0/"/>	
    <taskdef name="izpack" classpath="${IZPACK_HOME}/lib/compiler.jar"
    classname="com.izforge.izpack.ant.IzPackTask"/>
    
    <path id="build.classpath">
        <path location="${build.dir}"/>
        <path refid="deps.common.util"/>
    </path>

    <path id="run.classpath">
        <path location="${build.dir}"/>
        <path refid="deps.common.util"/>
        <path refid="deps.filters"/>
    </path>

    <target name="pre-compile" depends="init">
        <mkdir dir="${build.dir}/org/jvnet/olt/filters/gui"/>
        <copy todir="${build.dir}">
            <fileset dir="src" includes="**/Xliff*.properties"/>
        </copy>
		
    </target>

    <target name="compile" depends="pre-compile,local-deps,common.compile">
    </target>

    <target name="local-deps" unless="do.build.deps">
    </target>

    
    <target name="init" depends="common.init">
        <echo message="Using build directory ${build.dir}"/>
        <mkdir dir="${dest.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${installer.dir}"/>
        <!-- the version number to use for the installer
         TODO: include the version number in the source code
         in a replacable area so it can be seen in the running app
         -->
        <property name="build.version" value="1.2alpha"/>
        <property name="build.version.flat" value="1_2alpha"/>

        <available 
        file="${dest.dir}/filters.jar"
        property="do.build.deps"/>
    </target>


    <!-- build dependencies -->
    <target name="deps" unless="do.build.deps">
    </target>

    <target name="dist" depends="common.dist">

        <mkdir dir="${installer.dir}"/>

        <copy file="${dest.dir}/filters.jar" verbose="true" tofile="${installer.dir}/classes/filters.jar"/>
        <copy file="${dest.dir}/tt-common.jar" verbose="true" tofile="${installer.dir}/classes/tt-common.jar"/>
        <copy file="${extlib.dir}/dom4j-161.jar" verbose="true" todir="${installer.dir}/classes/"/>
        <copy file="${extlib.dir}/dtdparser121.jar" verbose="true" todir="${installer.dir}/classes/"/>

        <copy todir="${installer.dir}" verbose="true">
            <fileset dir="installer">
                <include name="*.bat"/>
                <include name="*.sh"/>
                <include name="shortcuts_*.xml"/>
                <include name="install_*.xml"/>
                <include name="*.desktop"/>
            </fileset>
        </copy>
	
        <mkdir dir="${installer.dir}/resources"/>
        <!-- make the user-visible directory -->
        <mkdir dir="${installer.dir}/resources/xml-config"/>
        <!-- make the store-private directory -->
        <mkdir dir="${installer.dir}/resources/.xml-config-store"/>
	
        <copy todir="${installer.dir}/resources/" verbose="true" file="../xml_config_parser/resources/xml-config.dtd"/>
        <copy todir="${installer.dir}/resources/.xml-config-store" verbose="true" file="../xml_config_parser/resources/README"/>

        <copy todir="${installer.dir}/resources/xml-config" verbose="true">
            <fileset dir="../xml_filter/resources/config-files/">
                <include name="*.xml"/>
            </fileset>
        </copy>
	
        <copy todir="${installer.dir}/resources/" file="../../../www/olt-branding//icon.png"/>

        <!-- copy the license into the distribution -->
        <copy todir="${installer.dir}" file="../../../LICENSE.txt"/>
		
        <chmod file="${installer.dir}/filters.sh" perm="ugo+rx"/>

        <!-- documentation -->
        <!-- TODO -->

        <!-- set product version number in installer files -->
        <replace dir="${installer.dir}" token="@VERSION@" value="${build.version}">
            <include name="install_*.xml"/>
            <include name="shortcuts_*.xml"/>
        </replace>
        <replace dir="${installer.dir}" token="@VERSION_FLAT@" value="${build.version.flat}">
            <include name="install_*.xml"/>
            <include name="shortcuts_*.xml"/>
            <include name="install.*"/>
        </replace>

        <echo>Building installer for Windows</echo>
        <izpack input="${installer.dir}/install_windows.xml"
        output="${dest.dir}/xliff_filters_v${build.version.flat}_win.jar"
        installerType="standard"
        basedir="${installer.dir}"
        izPackDir="${IZPACK_HOME}"/>
                    
        <echo>Building installer for UNIX</echo>
        <izpack input="${installer.dir}/install_unix.xml"
        output="${dest.dir}/xliff_filters_v${build.version.flat}_unix.jar"
        installerType="standard"
        basedir="${installer.dir}"
        izPackDir="${IZPACK_HOME}"/>		
		
        <zip destfile="${dest.dir}/xliff_filters_v${build.version.flat}_win.zip">
            <zipfileset dir="${dest.dir}" includes="xliff_filters_v${build.version.flat}_win.jar"/>
            <zipfileset dir="${installer.dir}" includes="install.bat" />
        </zip>
	
        <tar destfile="${dest.dir}/xliff_filters_v${build.version.flat}_unix.tar.gz" compression="gzip">
            <tarfileset dir="${dest.dir}" includes="xliff_filters_v${build.version.flat}_unix.jar" mode="755"/>
            <tarfileset dir="${installer.dir}" includes="install.sh" mode="755"/>
        </tar>
    </target>

    <target name="run" >
        <java 
            classpathref="run.classpath" 
            fork="yes"
            classname="org.jvnet.olt.filters.gui.XliffFilterGUI">
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=58001"/>
            <jvmarg value="-Xmx512M"/>
            <sysproperty key="java.util.logging.config.file" value="logging.properties"/>
            <arg value="resources" />
        </java>
		
    </target>
    
    <target name="clean" depends="common.clean">
        <delete dir="${editor.dest.dir}"/>
        <delete dir="${build.dir}"/>
    </target>

</project>
