
/*
 * Copyright  2005 Sun Microsystems, Inc. 
 * All rights reserved Use is subject to license terms.
 *
 */

package org.jvnet.olt.parsers.MsgFileParser;

import junit.framework.*;
import java.io.StringReader;
import java.io.StringWriter;

public class SetCommentAdditions 
extends TestCase
{

  StringReader reader;
  String string_round =  "$ ==================================================================\n" + 
  "$ = Project Message Source File: generated by 'dtcodegen'\n" + 
  "$ = Generated message sets have 'DTBMS_<name>' as their comment\n" + 
  "$ = PLEASE READ SET COMMENTS ON HOW TO EDIT GENERATED MESSAGE SETS \n" + 
  "$ ==================================================================\n" + 
  "\n" + 
  "$quote \"\n" + 
  "\n" + 
  "$set 1       DTBMS_sdtmedia_slice_project\n" + 
  "$    ** Generated messages for 'sdtmedia_slice_project'.\n" + 
  "$    ** DO NOT EDIT MESSAGES OR THE $set LINE ABOVE.\n" + 
  "$set 2       DTBMS_Slice_Editor\n" + 
  "$    ** Generated messages for 'Slice_Editor'.\n" + 
  "$    ** DO NOT EDIT MESSAGES OR THE $set LINE ABOVE.\n" + 
  "$    ** DO NOT USE THESE MESSAGES IN YOUR APPLICATION CODE.\n" + 
  "$    ** You can edit this comment and add comments below each message.\n" + 
  "2 \"AutoSlice\"\n" + 
  "3 \"Use this window to manage Solaris Slices (partitions) on removable media.\\nWarning: This process is not reversible.\"\n" + 
  "4 \"Id Flags tags asdf sdfg\"\n" + 
  "7 \"Slices (Partitions)\"\n" + 
  "$    ** Generated messages for 'applicationmessages'.\n" + 
  "$    ** DO NOT EDIT MESSAGES OR THE $set LINE ABOVE.\n" + 
  "$    ** DO NOT USE THESE MESSAGES IN YOUR APPLICATION CODE.\n" + 
  "$    ** You can edit this comment and add comments below each message.\n" + 
  "$set 3\n"+
  "4 \"Hide/Show Bar Chart\""; 


  public SetCommentAdditions(String name)
  {
    super(name);
  }

  public void setUp()
  {
    //  Put a sample .msg file in a string
  String string =  "$ ==================================================================\n" + 
  "$ = Project Message Source File: generated by 'dtcodegen'\n" + 
  "$ = Generated message sets have 'DTBMS_<name>' as their comment\n" + 
  "$ = PLEASE READ SET COMMENTS ON HOW TO EDIT GENERATED MESSAGE SETS \n" + 
  "$ ==================================================================\n" + 
  "\n" + 
  "$quote \"\n" + 
  "\n" + 
  "$set 1       DTBMS_sdtmedia_slice_project\n" + 
  "$    ** Generated messages for 'sdtmedia_slice_project'.\n" + 
  "$    ** DO NOT EDIT MESSAGES OR THE $set LINE ABOVE.\n" + 
  "$set 2       DTBMS_Slice_Editor\n" + 
  "$    ** Generated messages for 'Slice_Editor'.\n" + 
  "$    ** DO NOT EDIT MESSAGES OR THE $set LINE ABOVE.\n" + 
  "$    ** DO NOT USE THESE MESSAGES IN YOUR APPLICATION CODE.\n" + 
  "$    ** You can edit this comment and add comments below each message.\n" + 
  "2 \"AutoSlice\"\n" + 
  "3 \"Use this window to manage Solaris Slices (partitions) on removable media.\\nWarning: This process is not reversible.\"\n" + 
  "4 \"Id Flags tags asdf sdfg\"\n" + 
  "7 \"Slices (Partitions)\"\n" + 
  "$    ** Generated messages for 'applicationmessages'.\n" + 
  "$    ** DO NOT EDIT MESSAGES OR THE $set LINE ABOVE.\n" + 
  "$    ** DO NOT USE THESE MESSAGES IN YOUR APPLICATION CODE.\n" + 
  "$    ** You can edit this comment and add comments below each message.\n" + 
  "$set 3\n"+
  "4 \"Hide/Show Bar Chart\""; 

  reader = new StringReader(string);
  }

  public void testParse()
  {
    MsgFileParser parser = new MsgFileParser(reader);
    try
    {
      parser.parse();      
    }
    catch(Exception ex)
    {
      System.out.println (ex);// fail("Parse of the test file failed!" + ex);
    }
  }

  public void testDisplayRoundTrip()
  {
    MsgFileParser parser = new MsgFileParser(reader);
    StringWriter writer = new StringWriter();
    try
    {
      parser.parse();
      QuoteReplacingVisitor restoringVisitor = 
	new QuoteReplacingVisitor();
      parser.walkParseTree(restoringVisitor, "");
     
      DisplayingNodePrintingVisitor printingVisitor = 
	new DisplayingNodePrintingVisitor(writer);
      parser.walkParseTree(printingVisitor, "");
    }
    catch(Exception ex)
    {
      fail("Parse of the test file failed!" + ex);
    }
    //    System.err.print(writer.getBuffer().toString());
    //    System.err.print("\n\n" + string_round);

    assertEquals("Round trip handling of the message file failed!",
		 string_round, writer.getBuffer().toString() );
  }

  public static Test suite()
  {
    TestSuite suite = new TestSuite();
    suite.addTest( new SetCommentAdditions("testParse"));
    suite.addTest( new SetCommentAdditions("testDisplayRoundTrip"));

    //   suite.addTest( new DelsetTest("testDelsets"));

    return suite;
  }


}
