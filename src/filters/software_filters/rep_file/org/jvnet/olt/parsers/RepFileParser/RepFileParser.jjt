
/*
 * Copyright  2005 Sun Microsystems, Inc. 
 * All rights reserved Use is subject to license terms.
 *
 */

options{
  NODE_PACKAGE = "org.jvnet.olt.parsers.RepFileParser";
  LOOKAHEAD=4;
  VISITOR = true;
  FORCE_LA_CHECK = true;
  STATIC = false;
  UNICODE_INPUT = true;
}

PARSER_BEGIN(RepFileParser)

package org.jvnet.olt.parsers.RepFileParser;

// import java.io.*;

public class RepFileParser
{
  /**
   *  A static method to allow the SCCS version of the file to be read at 
   *  runtime.
   */
  public static final String getVersionInfo()
  {
    return "Eptas .rep File Parser - version: 1.3";
  }

  protected boolean boolParsed = false;

  /**
   *  The method is called by other Message Database classes to parse the
   *  current input stream as a Java Resource Bundle
   *  @exception  ParseException
   */
  public void parse() throws ParseException
  {
    //  Call top level rule.
    file();
    boolParsed = true;
  }

  /**
   *  walkParseTree:  This method provides an interface to allow node Visitors
   *  to be passed to the parse tree generated by this parser. 
   *  @param  visitor The visitor to act on all the nodes in the parse tree.
   *  @param  data    An object to be used as an aid to the tree walk.
   *  @exception Exception
   */
  public void walkParseTree(RepFileParserVisitor visitor, Object data) throws Exception 
  {
    if(boolParsed && (visitor != null))
    {
      //  Get root node of the parse tree
      SimpleNode node =(SimpleNode) jjtree.rootNode();
      node.jjtAccept(visitor, data);
    }
    else
    {
      //  Throw an exception
      throw new Exception("Input stream not parsed");
    }
  }
  protected void finalize() throws Throwable
  {
    super.finalize();
  }
}

PARSER_END(RepFileParser)


/* String literals */

//===============
TOKEN : {    <Filename: "File:">}
TOKEN : {    <RepetitHeader: "                NO     NWO     NCH     PLACEB">}
TOKEN : {    <Repetit: "Repetit.">}
TOKEN : {    <onehundred: "100%">}
TOKEN : {    <ninetyfive: "95%-99%">}
TOKEN : {    <eightyfive: "85%-94%">}
TOKEN : {    <seventyfive: "75%-84%">}
TOKEN : {    <fifty: "50%-74%">}
TOKEN : {    <sums: "Sums">}
TOKEN : {    <TMAllMatches: "TM Matching Statistics - All matches">}
TOKEN : {    <TMBestMatches: "TM Matching Statistics - Best match only">}
TOKEN : {    <SimilHeader: "Simil.         FQ     BRQ     ARQ      RQ       NWO       NCH        RC      RCR      Placeb">}
TOKEN : {    <NotTran: "NotTran">}
TOKEN : {    <Transla: "Transla">}
TOKEN : {    <SentNo: "SentNo">}
TOKEN : {    <CharNo: "CharNo">}
TOKEN : {    <WordNo: "WordNo">}
TOKEN : {    <CharPerWord: "Char/Wo">}
TOKEN : {    <WordPerSent: "Word/Se">}
TOKEN : {    <CharPerSent: "Char/Se">}

TOKEN :
{
    <DOT: ".">
}

TOKEN :
{
  <NEWLINE: ["\n", "\r"]>
}

TOKEN :
{
    //  <NUMBER: (["0","1","2","3","4","5","6","7","8","9"])+>
    <NUMBER: (["0"-"9"])+>
}
    
TOKEN :
{
    <DECIMAL_NUMBER: (["0"-"9"])+"."(["0"-"9"]["0"-"9"])>
}

TOKEN :
{
  <WORD:  (~["\t"," ","\b","\f","\n","\r"] )+  >
}


/* White space */
SKIP :
{
  <WS: (" " |
	"\t" |
	"\b" |
	"\f")+ > 
}


/* 
 *  Hack productions to get tokens into the parser tree. jjtree doesn't put
 *  them in by default. These hacks also update nodes in the parse tree with
 *  the values that the tokens contain.
 */


/*
 *  Productions
 */
void file():
{}
{
    ( (Report())+ | <EOF> )
}


void Report():
{String s="";}
{
    Filename_line() 


    <RepetitHeader> newline() Repetit_line() 
    <TMAllMatches> newline() <SimilHeader> newline()
	stats_list_all()
    <TMBestMatches> newline() <SimilHeader> newline()
	stats_list_best()
    NotTran() newline()
    Transla() newline()
    SentNo() newline()
    CharNo() newline()
    WordNo() newline()
    CharPerWord() newline()
    WordPerSent() newline()
    CharPerSent()

    (blank_line())*

}

void Filename_line():
{String s="";
Token t;
}
{
    t=<Filename> s=word() newline() {jjtThis.setNodeData(s);}
}

// ------------------------ Here's the list of repetition counters  ------------------

void Repetit_line():
{}
{ 
   <Repetit> Repetit_NO() Repetit_NWO() Repetit_NCH() Repetit_PLACEB() newline()
}

void Repetit_NO():
{String s="";}
{
    s=number() {jjtThis.setNodeData(s);}
}

void Repetit_NWO():
{String s="";}
{
    s=number() {jjtThis.setNodeData(s);}
}

void Repetit_NCH():
{String s="";}
{
    s=number() {jjtThis.setNodeData(s);}
}

void Repetit_PLACEB():
{String s="";}
{
    s=number() {jjtThis.setNodeData(s);}
}


// ------------------------ Here's the list of "simple" statistics at the end ------------------

void NotTran():
{String s="";
Token t;
}
{
    t=<NotTran>  s=number() { jjtThis.setNodeData(s);}
}

void Transla():
{String s="";
Token t;
}
{
    t=<Transla>  s=number() { jjtThis.setNodeData(s);}
}

void SentNo():
{String s="";
Token t;
}
{
    t=<SentNo>  s=number() { jjtThis.setNodeData(s);}
}

void CharNo():
{String s="";
Token t;
}
{
    t=<CharNo>  s=number() { jjtThis.setNodeData(s);}
}

void WordNo():
{String s="";
Token t;
}
{
    t=<WordNo>  s=number() { jjtThis.setNodeData(s);}
}
   
void CharPerWord():
{String s="";
Token t;
}
{
    t=<CharPerWord>  s=number() { jjtThis.setNodeData(s);}
}
   
void WordPerSent():
{String s="";
Token t;
}
{
    t=<WordPerSent>  s=number() { jjtThis.setNodeData(s);}
}
   
void CharPerSent():
{String s="";
Token t;
}
{
    t=<CharPerSent>  s=number() { jjtThis.setNodeData(s);}
}


// -------------------------------- Here beginneth the big list of stats ------------------------------


void stats_list_all():
{String s="";}
{
	all_onehundred_line()
        all_ninetyfive_line()
        all_eightyfive_line()
        all_seventyfive_line()
        all_fifty_line()
        all_sums_line()
}

void stats_list_best():
{String s="";}
{
	best_onehundred_line()
        best_ninetyfive_line()
        best_eightyfive_line()
        best_seventyfive_line()
        best_fifty_line()
        best_sums_line()
}

// Productions for onehundred
void best_onehundred_line():
{String s="";}
{
    <onehundred> best_onehundred_FQ()  best_onehundred_BRQ()  best_onehundred_ARQ()  best_onehundred_RQ()  best_onehundred_NWO()  best_onehundred_NCH() best_onehundred_RC()  best_onehundred_RCR()  best_onehundred_Placeb() newline()
}

// --------------------------
void best_onehundred_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_onehundred_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_onehundred_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_onehundred_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_onehundred_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_onehundred_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_onehundred_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_onehundred_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_onehundred_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for ninetyfive
void best_ninetyfive_line():
{String s="";}
{
    <ninetyfive> best_ninetyfive_FQ()  best_ninetyfive_BRQ()  best_ninetyfive_ARQ()  best_ninetyfive_RQ()  best_ninetyfive_NWO()  best_ninetyfive_NCH() best_ninetyfive_RC()  best_ninetyfive_RCR()  best_ninetyfive_Placeb() newline()
}

// --------------------------
void best_ninetyfive_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_ninetyfive_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_ninetyfive_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_ninetyfive_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_ninetyfive_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_ninetyfive_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_ninetyfive_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_ninetyfive_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_ninetyfive_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for eightyfive
void best_eightyfive_line():
{String s="";}
{
    <eightyfive> best_eightyfive_FQ()  best_eightyfive_BRQ()  best_eightyfive_ARQ()  best_eightyfive_RQ()  best_eightyfive_NWO()  best_eightyfive_NCH() best_eightyfive_RC()  best_eightyfive_RCR()  best_eightyfive_Placeb() newline()
}

// --------------------------
void best_eightyfive_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_eightyfive_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_eightyfive_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_eightyfive_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_eightyfive_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_eightyfive_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_eightyfive_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_eightyfive_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_eightyfive_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for seventyfive
void best_seventyfive_line():
{String s="";}
{
    <seventyfive> best_seventyfive_FQ()  best_seventyfive_BRQ()  best_seventyfive_ARQ()  best_seventyfive_RQ()  best_seventyfive_NWO()  best_seventyfive_NCH() best_seventyfive_RC()  best_seventyfive_RCR()  best_seventyfive_Placeb() newline()
}

// --------------------------
void best_seventyfive_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_seventyfive_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_seventyfive_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_seventyfive_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_seventyfive_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_seventyfive_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_seventyfive_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_seventyfive_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_seventyfive_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for fifty
void best_fifty_line():
{String s="";}
{
    <fifty> best_fifty_FQ()  best_fifty_BRQ()  best_fifty_ARQ()  best_fifty_RQ()  best_fifty_NWO()  best_fifty_NCH() best_fifty_RC()  best_fifty_RCR()  best_fifty_Placeb() newline()
}

// --------------------------
void best_fifty_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_fifty_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_fifty_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_fifty_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_fifty_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_fifty_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_fifty_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_fifty_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_fifty_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for sums
void best_sums_line():
{String s="";}
{
    <sums> best_sums_FQ()  best_sums_BRQ()  best_sums_ARQ()  best_sums_RQ()  best_sums_NWO()  best_sums_NCH() best_sums_RC()  best_sums_RCR()  best_sums_Placeb() newline()
}

// --------------------------
void best_sums_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_sums_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_sums_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_sums_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_sums_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_sums_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_sums_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_sums_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void best_sums_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for onehundred
void all_onehundred_line():
{String s="";}
{
    <onehundred> all_onehundred_FQ()  all_onehundred_BRQ()  all_onehundred_ARQ()  all_onehundred_RQ()  all_onehundred_NWO()  all_onehundred_NCH() all_onehundred_RC()  all_onehundred_RCR()  all_onehundred_Placeb() newline()
}

// --------------------------
void all_onehundred_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_onehundred_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_onehundred_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_onehundred_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_onehundred_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_onehundred_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_onehundred_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_onehundred_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_onehundred_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for ninetyfive
void all_ninetyfive_line():
{String s="";}
{
    <ninetyfive> all_ninetyfive_FQ()  all_ninetyfive_BRQ()  all_ninetyfive_ARQ()  all_ninetyfive_RQ()  all_ninetyfive_NWO()  all_ninetyfive_NCH() all_ninetyfive_RC()  all_ninetyfive_RCR()  all_ninetyfive_Placeb() newline()
}

// --------------------------
void all_ninetyfive_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_ninetyfive_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_ninetyfive_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_ninetyfive_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_ninetyfive_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_ninetyfive_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_ninetyfive_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_ninetyfive_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_ninetyfive_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for eightyfive
void all_eightyfive_line():
{String s="";}
{
    <eightyfive> all_eightyfive_FQ()  all_eightyfive_BRQ()  all_eightyfive_ARQ()  all_eightyfive_RQ()  all_eightyfive_NWO()  all_eightyfive_NCH() all_eightyfive_RC()  all_eightyfive_RCR()  all_eightyfive_Placeb() newline()
}

// --------------------------
void all_eightyfive_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_eightyfive_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_eightyfive_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_eightyfive_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_eightyfive_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_eightyfive_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_eightyfive_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_eightyfive_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_eightyfive_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for seventyfive
void all_seventyfive_line():
{String s="";}
{
    <seventyfive> all_seventyfive_FQ()  all_seventyfive_BRQ()  all_seventyfive_ARQ()  all_seventyfive_RQ()  all_seventyfive_NWO()  all_seventyfive_NCH() all_seventyfive_RC()  all_seventyfive_RCR()  all_seventyfive_Placeb() newline()
}

// --------------------------
void all_seventyfive_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_seventyfive_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_seventyfive_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_seventyfive_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_seventyfive_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_seventyfive_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_seventyfive_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_seventyfive_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_seventyfive_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for fifty
void all_fifty_line():
{String s="";}
{
    <fifty> all_fifty_FQ()  all_fifty_BRQ()  all_fifty_ARQ()  all_fifty_RQ()  all_fifty_NWO()  all_fifty_NCH() all_fifty_RC()  all_fifty_RCR()  all_fifty_Placeb() newline()
}

// --------------------------
void all_fifty_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_fifty_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_fifty_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_fifty_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_fifty_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_fifty_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_fifty_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_fifty_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_fifty_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// Productions for sums
void all_sums_line():
{String s="";}
{
    <sums> all_sums_FQ()  all_sums_BRQ()  all_sums_ARQ()  all_sums_RQ()  all_sums_NWO()  all_sums_NCH() all_sums_RC()  all_sums_RCR()  all_sums_Placeb() newline()
}

// --------------------------
void all_sums_FQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_sums_BRQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_sums_ARQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_sums_RQ():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_sums_NWO():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_sums_NCH():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_sums_RC():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_sums_RCR():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}


// --------------------------
void all_sums_Placeb():
{String s="";
 Token t;
}
{
   s=number() { jjtThis.setNodeData(s);}
}





// -------------------------------- Here endeth the big list of stats ------------------------------
void blank_line():
{
  String s="";
  String st="";
}
{
   st=newline() { s+=st; } { jjtThis.setNodeData(s); }
}


String word():
{
 String s = "";
 Token t;
}
{
  (t=<WORD> { s+=t.image;}) {  return s ;}

}


String newline():
{
  String s = "";
  Token t;
}
{
   (t=<NEWLINE> { s+=t.image;}) { jjtThis.setNodeData(s); return s;}
}

String number():
{
  String s= "";
  Token t;
}
{
    (s=integer_number() | s=decimal_number())   { jjtThis.setNodeData(s); return s;}
}

String integer_number():
{
  String s= "";
  Token t;
}
{
    t=<NUMBER> {s+=t.image;}  { jjtThis.setNodeData(s); return s;}
}

String decimal_number():
{
  String s= "";
  Token t;
}
{
    t=<DECIMAL_NUMBER> {s+=t.image;}  { jjtThis.setNodeData(s); return s;}
}
