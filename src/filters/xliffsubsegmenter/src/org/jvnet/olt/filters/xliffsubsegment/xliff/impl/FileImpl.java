
/*
 * Copyright  2005 Sun Microsystems, Inc. 
 * All rights reserved Use is subject to license terms.
 *
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.10.08 at 01:50:51 BST 
//


package org.jvnet.olt.filters.xliffsubsegment.xliff.impl;

public class FileImpl implements org.jvnet.olt.filters.xliffsubsegment.xliff.File, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallableObject, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializable, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.ValidatableObject
{

    protected java.lang.String _Original;
    protected java.lang.String _Tool;
    protected java.lang.String _ProductName;
    protected java.lang.String _Ts;
    protected java.lang.String _SourceLanguage;
    protected java.lang.String _Date;
    protected org.jvnet.olt.filters.xliffsubsegment.xliff.Body _Body;
    protected java.lang.String _TargetLanguage;
    protected java.lang.String _ProductVersion;
    protected java.lang.String _XmlSpace;
    protected java.lang.String _Datatype;
    protected java.lang.String _Category;
    protected java.lang.String _BuildNum;
    protected org.jvnet.olt.filters.xliffsubsegment.xliff.Header _Header;
    public final static java.lang.Class version = (org.jvnet.olt.filters.xliffsubsegment.xliff.impl.JAXBVersion.class);
    private final static org.relaxng.datatype.Datatype ___dt0 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private final static org.relaxng.datatype.Datatype ___dt1 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.jvnet.olt.filters.xliffsubsegment.xliff.File.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "file";
    }

    public java.lang.String getOriginal() {
        return _Original;
    }

    public void setOriginal(java.lang.String value) {
        _Original = value;
    }

    public java.lang.String getTool() {
        return _Tool;
    }

    public void setTool(java.lang.String value) {
        _Tool = value;
    }

    public java.lang.String getProductName() {
        return _ProductName;
    }

    public void setProductName(java.lang.String value) {
        _ProductName = value;
    }

    public java.lang.String getTs() {
        return _Ts;
    }

    public void setTs(java.lang.String value) {
        _Ts = value;
    }

    public java.lang.String getSourceLanguage() {
        return _SourceLanguage;
    }

    public void setSourceLanguage(java.lang.String value) {
        _SourceLanguage = value;
    }

    public java.lang.String getDate() {
        return _Date;
    }

    public void setDate(java.lang.String value) {
        _Date = value;
    }

    public org.jvnet.olt.filters.xliffsubsegment.xliff.Body getBody() {
        return _Body;
    }

    public void setBody(org.jvnet.olt.filters.xliffsubsegment.xliff.Body value) {
        _Body = value;
    }

    public java.lang.String getTargetLanguage() {
        return _TargetLanguage;
    }

    public void setTargetLanguage(java.lang.String value) {
        _TargetLanguage = value;
    }

    public java.lang.String getProductVersion() {
        return _ProductVersion;
    }

    public void setProductVersion(java.lang.String value) {
        _ProductVersion = value;
    }

    public java.lang.String getXmlSpace() {
        return _XmlSpace;
    }

    public void setXmlSpace(java.lang.String value) {
        _XmlSpace = value;
    }

    public java.lang.String getDatatype() {
        return _Datatype;
    }

    public void setDatatype(java.lang.String value) {
        _Datatype = value;
    }

    public java.lang.String getCategory() {
        return _Category;
    }

    public void setCategory(java.lang.String value) {
        _Category = value;
    }

    public java.lang.String getBuildNum() {
        return _BuildNum;
    }

    public void setBuildNum(java.lang.String value) {
        _BuildNum = value;
    }

    public org.jvnet.olt.filters.xliffsubsegment.xliff.Header getHeader() {
        return _Header;
    }

    public void setHeader(org.jvnet.olt.filters.xliffsubsegment.xliff.Header value) {
        _Header = value;
    }

    public org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context) {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.FileImpl.Unmarshaller(context);
    }

    public void serializeBody(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "file");
        if (_XmlSpace!= null) {
            context.getNamespaceContext().declareNamespace("http://www.w3.org/XML/1998/namespace", null, true);
            {
                java.lang.Object o = _XmlSpace;
            }
        }
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Header), "Header");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Body), "Body");
        context.endNamespaceDecls();
        if (_BuildNum!= null) {
            context.startAttribute("", "build-num");
            try {
                context.text(((java.lang.String) _BuildNum), "BuildNum");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "source-language");
        try {
            context.text(((java.lang.String) _SourceLanguage), "SourceLanguage");
        } catch (java.lang.Exception e) {
            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_XmlSpace!= null) {
            context.startAttribute("http://www.w3.org/XML/1998/namespace", "space");
            {
                java.lang.Object o = _XmlSpace;
                if (o instanceof java.lang.String) {
                    try {
                        context.text(((java.lang.String) _XmlSpace), "XmlSpace");
                    } catch (java.lang.Exception e) {
                        org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                } else {
                    if (o instanceof java.lang.String) {
                        try {
                            context.text(((java.lang.String) _XmlSpace), "XmlSpace");
                        } catch (java.lang.Exception e) {
                            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                    } else {
                        org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handleTypeMismatchError(context, this, "XmlSpace", o);
                    }
                }
            }
            context.endAttribute();
        }
        if (_ProductName!= null) {
            context.startAttribute("", "product-name");
            try {
                context.text(((java.lang.String) _ProductName), "ProductName");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Ts!= null) {
            context.startAttribute("", "ts");
            try {
                context.text(((java.lang.String) _Ts), "Ts");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "original");
        try {
            context.text(((java.lang.String) _Original), "Original");
        } catch (java.lang.Exception e) {
            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Category!= null) {
            context.startAttribute("", "category");
            try {
                context.text(((java.lang.String) _Category), "Category");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "datatype");
        try {
            context.text(((java.lang.String) _Datatype), "Datatype");
        } catch (java.lang.Exception e) {
            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_ProductVersion!= null) {
            context.startAttribute("", "product-version");
            try {
                context.text(((java.lang.String) _ProductVersion), "ProductVersion");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Tool!= null) {
            context.startAttribute("", "tool");
            try {
                context.text(((java.lang.String) _Tool), "Tool");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_TargetLanguage!= null) {
            context.startAttribute("", "target-language");
            try {
                context.text(((java.lang.String) _TargetLanguage), "TargetLanguage");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Date!= null) {
            context.startAttribute("", "date");
            try {
                context.text(((java.lang.String) _Date), "Date");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Header), "Header");
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Body), "Body");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Header), "Header");
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Body), "Body");
        context.endElement();
    }

    public void serializeAttributes(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.jvnet.olt.filters.xliffsubsegment.xliff.File.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000"
+"\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000-com.sun.msv.dataty"
+"pe.xsd.NormalizedStringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.dataty"
+"pe.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Stri"
+"ng;L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd"
+"/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000"
+"\u0010normalizedStringsr\u00004com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor$Replace\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpt\u0000"
+"\u0005CDATAt\u0000\u0000sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L"
+"\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\tbuild-numq\u0000~\u00002sr\u00000com.sun.msv.gramm"
+"ar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u001a\u0001q\u0000~\u00008"
+"sq\u0000~\u0000\u0018ppq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\u000fsource-languageq\u0000~\u00002sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001bpsq\u0000~\u0000\u0016ppsr\u0000\u001ccom.sun.msv.grammar.ValueExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtq\u0000"
+"~\u0000\u001dL\u0000\u0004nameq\u0000~\u0000\u001eL\u0000\u0005valuet\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000\u0004q\u0000~\u0000\u001bpsr\u0000\""
+"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000(t\u0000\u0005t"
+"okensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collaps"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+\u0001sq\u0000~\u0000/t\u0000\u000bENUMERATIONq\u0000~\u00002t\u0000\u0007defaultsq\u0000~\u0000@"
+"q\u0000~\u0000\u001bpq\u0000~\u0000Dq\u0000~\u0000Ht\u0000\bpreservesq\u0000~\u00003t\u0000\u0005spacet\u0000$http://www.w3.or"
+"g/XML/1998/namespaceq\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\fp"
+"roduct-nameq\u0000~\u00002q\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\u0002tsq\u0000~"
+"\u00002q\u0000~\u00008sq\u0000~\u0000\u0018ppq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\boriginalq\u0000~\u00002sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001bpq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\bcategoryq\u0000~\u00002q\u0000~\u00008sq\u0000~\u0000\u0018ppq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\bdata"
+"typeq\u0000~\u00002sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\u000fproduct-versionq\u0000"
+"~\u00002q\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\u0004toolq\u0000~\u00002q\u0000~\u00008sq\u0000~"
+"\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\u000ftarget-languageq\u0000~\u00002q\u0000~\u00008sq\u0000~\u0000"
+"\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\u0004dateq\u0000~\u00002q\u0000~\u00008sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016pp"
+"sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.m"
+"sv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~\u0000\u001bpsq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001bpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u00009q\u0000~\u0000ysr\u0000 com.sun.msv.grammar.AnyNameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00008sq\u0000~\u00003t\u0000/com.sun.tt.filters.xliffsub"
+"segment.xliff.Headert\u0000+http://java.sun.com/jaxb/xjc/dummy-el"
+"ementssq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000tq\u0000~\u0000\u001bpsq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000yq\u0000~\u0000{q\u0000~"
+"\u00008sq\u0000~\u00003t\u0000-org.jvnet.olt.filters.xliffsubsegment.xliff.Bodyq\u0000~\u0000"
+"~sq\u0000~\u00003t\u0000\u0004fileq\u0000~\u00002sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Cl"
+"osedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash"
+"\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/"
+"grammar/ExpressionPool;xp\u0000\u0000\u0000\u001a\u0001pq\u0000~\u0000\u0012q\u0000~\u0000Pq\u0000~\u0000\fq\u0000~\u0000=q\u0000~\u0000\u000eq\u0000~\u0000"
+"fq\u0000~\u0000\rq\u0000~\u0000\tq\u0000~\u0000\u0017q\u0000~\u0000\u0011q\u0000~\u0000sq\u0000~\u0000\u0080q\u0000~\u0000\u0013q\u0000~\u0000bq\u0000~\u0000\u0014q\u0000~\u0000\nq\u0000~\u0000\u000fq\u0000~\u0000"
+"jq\u0000~\u0000[q\u0000~\u0000vq\u0000~\u0000\u0081q\u0000~\u0000\u0010q\u0000~\u0000\u000bq\u0000~\u0000\u0015q\u0000~\u0000nq\u0000~\u0000Tx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------------------------------");
        }

        protected Unmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.jvnet.olt.filters.xliffsubsegment.xliff.impl.FileImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  28 :
                        attIdx = context.getAttribute("", "tool");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 31;
                            continue outer;
                        }
                        state = 31;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "source-language");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 7;
                            continue outer;
                        }
                        break;
                    case  25 :
                        attIdx = context.getAttribute("", "product-version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  38 :
                        if (("body" == ___local)&&("" == ___uri)) {
                            _Body = ((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BodyImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BodyImpl.class), 39, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "target-language");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 34;
                            continue outer;
                        }
                        state = 34;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "original");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 19;
                            continue outer;
                        }
                        break;
                    case  34 :
                        attIdx = context.getAttribute("", "date");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 37;
                            continue outer;
                        }
                        state = 37;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "ts");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  37 :
                        if (("header" == ___local)&&("" == ___uri)) {
                            _Header = ((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.HeaderImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.HeaderImpl.class), 38, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  40 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("file" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("http://www.w3.org/XML/1998/namespace", "space");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  1 :
                        attIdx = context.getAttribute("", "build-num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "datatype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 25;
                            continue outer;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "product-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  19 :
                        attIdx = context.getAttribute("", "category");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Tool = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SourceLanguage = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProductVersion = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TargetLanguage = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Original = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Date = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Ts = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BuildNum = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Datatype = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProductName = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Category = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  28 :
                        attIdx = context.getAttribute("", "tool");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 31;
                            continue outer;
                        }
                        state = 31;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "source-language");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 7;
                            continue outer;
                        }
                        break;
                    case  25 :
                        attIdx = context.getAttribute("", "product-version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "target-language");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 34;
                            continue outer;
                        }
                        state = 34;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "original");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 19;
                            continue outer;
                        }
                        break;
                    case  34 :
                        attIdx = context.getAttribute("", "date");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 37;
                            continue outer;
                        }
                        state = 37;
                        continue outer;
                    case  39 :
                        if (("file" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 40;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "ts");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  40 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        attIdx = context.getAttribute("http://www.w3.org/XML/1998/namespace", "space");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  1 :
                        attIdx = context.getAttribute("", "build-num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "datatype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 25;
                            continue outer;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "product-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  19 :
                        attIdx = context.getAttribute("", "category");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  28 :
                        if (("tool" == ___local)&&("" == ___uri)) {
                            state = 29;
                            return ;
                        }
                        state = 31;
                        continue outer;
                    case  4 :
                        if (("source-language" == ___local)&&("" == ___uri)) {
                            state = 5;
                            return ;
                        }
                        break;
                    case  25 :
                        if (("product-version" == ___local)&&("" == ___uri)) {
                            state = 26;
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  31 :
                        if (("target-language" == ___local)&&("" == ___uri)) {
                            state = 32;
                            return ;
                        }
                        state = 34;
                        continue outer;
                    case  16 :
                        if (("original" == ___local)&&("" == ___uri)) {
                            state = 17;
                            return ;
                        }
                        break;
                    case  34 :
                        if (("date" == ___local)&&("" == ___uri)) {
                            state = 35;
                            return ;
                        }
                        state = 37;
                        continue outer;
                    case  13 :
                        if (("ts" == ___local)&&("" == ___uri)) {
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  40 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        if (("space" == ___local)&&("http://www.w3.org/XML/1998/namespace" == ___uri)) {
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  1 :
                        if (("build-num" == ___local)&&("" == ___uri)) {
                            state = 2;
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  22 :
                        if (("datatype" == ___local)&&("" == ___uri)) {
                            state = 23;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("product-name" == ___local)&&("" == ___uri)) {
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  19 :
                        if (("category" == ___local)&&("" == ___uri)) {
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  30 :
                        if (("tool" == ___local)&&("" == ___uri)) {
                            state = 31;
                            return ;
                        }
                        break;
                    case  28 :
                        attIdx = context.getAttribute("", "tool");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 31;
                            continue outer;
                        }
                        state = 31;
                        continue outer;
                    case  15 :
                        if (("ts" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "source-language");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 7;
                            continue outer;
                        }
                        break;
                    case  25 :
                        attIdx = context.getAttribute("", "product-version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "target-language");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 34;
                            continue outer;
                        }
                        state = 34;
                        continue outer;
                    case  12 :
                        if (("product-name" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("source-language" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("space" == ___local)&&("http://www.w3.org/XML/1998/namespace" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "original");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 19;
                            continue outer;
                        }
                        break;
                    case  18 :
                        if (("original" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  34 :
                        attIdx = context.getAttribute("", "date");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 37;
                            continue outer;
                        }
                        state = 37;
                        continue outer;
                    case  27 :
                        if (("product-version" == ___local)&&("" == ___uri)) {
                            state = 28;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "ts");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  24 :
                        if (("datatype" == ___local)&&("" == ___uri)) {
                            state = 25;
                            return ;
                        }
                        break;
                    case  40 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("build-num" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("http://www.w3.org/XML/1998/namespace", "space");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  1 :
                        attIdx = context.getAttribute("", "build-num");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  21 :
                        if (("category" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        break;
                    case  22 :
                        attIdx = context.getAttribute("", "datatype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 25;
                            continue outer;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "product-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  19 :
                        attIdx = context.getAttribute("", "category");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  33 :
                        if (("target-language" == ___local)&&("" == ___uri)) {
                            state = 34;
                            return ;
                        }
                        break;
                    case  36 :
                        if (("date" == ___local)&&("" == ___uri)) {
                            state = 37;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  26 :
                            eatText3(value);
                            state = 27;
                            return ;
                        case  23 :
                            eatText9(value);
                            state = 24;
                            return ;
                        case  28 :
                            attIdx = context.getAttribute("", "tool");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 31;
                                continue outer;
                            }
                            state = 31;
                            continue outer;
                        case  29 :
                            eatText1(value);
                            state = 30;
                            return ;
                        case  4 :
                            attIdx = context.getAttribute("", "source-language");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 7;
                                continue outer;
                            }
                            break;
                        case  25 :
                            attIdx = context.getAttribute("", "product-version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 28;
                                continue outer;
                            }
                            state = 28;
                            continue outer;
                        case  35 :
                            eatText6(value);
                            state = 36;
                            return ;
                        case  14 :
                            eatText7(value);
                            state = 15;
                            return ;
                        case  31 :
                            attIdx = context.getAttribute("", "target-language");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 34;
                                continue outer;
                            }
                            state = 34;
                            continue outer;
                        case  32 :
                            eatText4(value);
                            state = 33;
                            return ;
                        case  16 :
                            attIdx = context.getAttribute("", "original");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 19;
                                continue outer;
                            }
                            break;
                        case  8 :
                            if (___dt0 .isValid(value, null)) {
                                eatText12(value);
                                state = 9;
                                return ;
                            }
                            if (___dt1 .isValid(value, null)) {
                                eatText13(value);
                                state = 9;
                                return ;
                            }
                            break;
                        case  34 :
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 37;
                                continue outer;
                            }
                            state = 37;
                            continue outer;
                        case  2 :
                            eatText8(value);
                            state = 3;
                            return ;
                        case  13 :
                            attIdx = context.getAttribute("", "ts");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 16;
                                continue outer;
                            }
                            state = 16;
                            continue outer;
                        case  40 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            attIdx = context.getAttribute("http://www.w3.org/XML/1998/namespace", "space");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            state = 10;
                            continue outer;
                        case  1 :
                            attIdx = context.getAttribute("", "build-num");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 4;
                                continue outer;
                            }
                            state = 4;
                            continue outer;
                        case  17 :
                            eatText5(value);
                            state = 18;
                            return ;
                        case  5 :
                            eatText2(value);
                            state = 6;
                            return ;
                        case  11 :
                            eatText10(value);
                            state = 12;
                            return ;
                        case  22 :
                            attIdx = context.getAttribute("", "datatype");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 25;
                                continue outer;
                            }
                            break;
                        case  20 :
                            eatText11(value);
                            state = 21;
                            return ;
                        case  10 :
                            attIdx = context.getAttribute("", "product-name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText10(v);
                                state = 13;
                                continue outer;
                            }
                            state = 13;
                            continue outer;
                        case  19 :
                            attIdx = context.getAttribute("", "category");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText11(v);
                                state = 22;
                                continue outer;
                            }
                            state = 22;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _XmlSpace = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _XmlSpace = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
