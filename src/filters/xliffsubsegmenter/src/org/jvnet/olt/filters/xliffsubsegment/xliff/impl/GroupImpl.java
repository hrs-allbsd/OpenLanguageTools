
/*
 * Copyright  2005 Sun Microsystems, Inc. 
 * All rights reserved Use is subject to license terms.
 *
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.10.08 at 01:50:51 BST 
//


package org.jvnet.olt.filters.xliffsubsegment.xliff.impl;

public class GroupImpl implements org.jvnet.olt.filters.xliffsubsegment.xliff.Group, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallableObject, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializable, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.ValidatableObject
{

    protected java.lang.String _Font;
    protected java.lang.String _Exstyle;
    protected java.lang.String _HelpId;
    protected java.lang.String _Ts;
    protected java.lang.String _Style;
    protected java.lang.String _Resname;
    protected java.lang.String _CssStyle;
    protected java.lang.String _MenuName;
    protected java.lang.String _MenuOption;
    protected java.lang.String _Extradata;
    protected java.lang.String _Extype;
    protected java.lang.String _XmlSpace;
    protected java.lang.String _Restype;
    protected java.lang.String _Menu;
    protected java.lang.String _Datatype;
    protected java.lang.String _Coord;
    protected com.sun.xml.bind.util.ListImpl _Content;
    protected java.lang.String _Id;
    public final static java.lang.Class version = (org.jvnet.olt.filters.xliffsubsegment.xliff.impl.JAXBVersion.class);
    private final static org.relaxng.datatype.Datatype ___dt0 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private final static org.relaxng.datatype.Datatype ___dt1 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.jvnet.olt.filters.xliffsubsegment.xliff.Group.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "group";
    }

    public java.lang.String getFont() {
        return _Font;
    }

    public void setFont(java.lang.String value) {
        _Font = value;
    }

    public java.lang.String getExstyle() {
        return _Exstyle;
    }

    public void setExstyle(java.lang.String value) {
        _Exstyle = value;
    }

    public java.lang.String getHelpId() {
        return _HelpId;
    }

    public void setHelpId(java.lang.String value) {
        _HelpId = value;
    }

    public java.lang.String getTs() {
        return _Ts;
    }

    public void setTs(java.lang.String value) {
        _Ts = value;
    }

    public java.lang.String getStyle() {
        return _Style;
    }

    public void setStyle(java.lang.String value) {
        _Style = value;
    }

    public java.lang.String getResname() {
        return _Resname;
    }

    public void setResname(java.lang.String value) {
        _Resname = value;
    }

    public java.lang.String getCssStyle() {
        return _CssStyle;
    }

    public void setCssStyle(java.lang.String value) {
        _CssStyle = value;
    }

    public java.lang.String getMenuName() {
        return _MenuName;
    }

    public void setMenuName(java.lang.String value) {
        _MenuName = value;
    }

    public java.lang.String getMenuOption() {
        return _MenuOption;
    }

    public void setMenuOption(java.lang.String value) {
        _MenuOption = value;
    }

    public java.lang.String getExtradata() {
        return _Extradata;
    }

    public void setExtradata(java.lang.String value) {
        _Extradata = value;
    }

    public java.lang.String getExtype() {
        return _Extype;
    }

    public void setExtype(java.lang.String value) {
        _Extype = value;
    }

    public java.lang.String getXmlSpace() {
        return _XmlSpace;
    }

    public void setXmlSpace(java.lang.String value) {
        _XmlSpace = value;
    }

    public java.lang.String getRestype() {
        return _Restype;
    }

    public void setRestype(java.lang.String value) {
        _Restype = value;
    }

    public java.lang.String getMenu() {
        return _Menu;
    }

    public void setMenu(java.lang.String value) {
        _Menu = value;
    }

    public java.lang.String getDatatype() {
        return _Datatype;
    }

    public void setDatatype(java.lang.String value) {
        _Datatype = value;
    }

    public java.lang.String getCoord() {
        return _Coord;
    }

    public void setCoord(java.lang.String value) {
        _Coord = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getContent() {
        if (_Content == null) {
            _Content = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Content;
    }

    public java.util.List getContent() {
        return _getContent();
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context) {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GroupImpl.Unmarshaller(context);
    }

    public void serializeBody(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx17 = 0;
        final int len17 = ((_Content == null)? 0 :_Content.size());
        context.startElement("", "group");
        int idx_12 = idx17;
        if (_XmlSpace!= null) {
            context.getNamespaceContext().declareNamespace("http://www.w3.org/XML/1998/namespace", null, true);
            {
                java.lang.Object o = _XmlSpace;
            }
        }
        while (idx_12 != len17) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Content.get(idx_12 ++)), "Content");
        }
        context.endNamespaceDecls();
        int idx_18 = idx17;
        if (_XmlSpace!= null) {
            context.startAttribute("http://www.w3.org/XML/1998/namespace", "space");
            {
                java.lang.Object o = _XmlSpace;
                if (o instanceof java.lang.String) {
                    try {
                        context.text(((java.lang.String) _XmlSpace), "XmlSpace");
                    } catch (java.lang.Exception e) {
                        org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                } else {
                    if (o instanceof java.lang.String) {
                        try {
                            context.text(((java.lang.String) _XmlSpace), "XmlSpace");
                        } catch (java.lang.Exception e) {
                            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                    } else {
                        org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handleTypeMismatchError(context, this, "XmlSpace", o);
                    }
                }
            }
            context.endAttribute();
        }
        if (_Datatype!= null) {
            context.startAttribute("", "datatype");
            try {
                context.text(((java.lang.String) _Datatype), "Datatype");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_MenuOption!= null) {
            context.startAttribute("", "menu-option");
            try {
                context.text(((java.lang.String) _MenuOption), "MenuOption");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Extradata!= null) {
            context.startAttribute("", "extradata");
            try {
                context.text(((java.lang.String) _Extradata), "Extradata");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Extype!= null) {
            context.startAttribute("", "extype");
            try {
                context.text(((java.lang.String) _Extype), "Extype");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Coord!= null) {
            context.startAttribute("", "coord");
            try {
                context.text(((java.lang.String) _Coord), "Coord");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Id!= null) {
            context.startAttribute("", "id");
            try {
                context.text(((java.lang.String) _Id), "Id");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Font!= null) {
            context.startAttribute("", "font");
            try {
                context.text(((java.lang.String) _Font), "Font");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_HelpId!= null) {
            context.startAttribute("", "help-id");
            try {
                context.text(((java.lang.String) _HelpId), "HelpId");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Resname!= null) {
            context.startAttribute("", "resname");
            try {
                context.text(((java.lang.String) _Resname), "Resname");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Exstyle!= null) {
            context.startAttribute("", "exstyle");
            try {
                context.text(((java.lang.String) _Exstyle), "Exstyle");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Ts!= null) {
            context.startAttribute("", "ts");
            try {
                context.text(((java.lang.String) _Ts), "Ts");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_MenuName!= null) {
            context.startAttribute("", "menu-name");
            try {
                context.text(((java.lang.String) _MenuName), "MenuName");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Style!= null) {
            context.startAttribute("", "style");
            try {
                context.text(((java.lang.String) _Style), "Style");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_CssStyle!= null) {
            context.startAttribute("", "css-style");
            try {
                context.text(((java.lang.String) _CssStyle), "CssStyle");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Menu!= null) {
            context.startAttribute("", "menu");
            try {
                context.text(((java.lang.String) _Menu), "Menu");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Restype!= null) {
            context.startAttribute("", "restype");
            try {
                context.text(((java.lang.String) _Restype), "Restype");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx_18 != len17) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Content.get(idx_18 ++)), "Content");
        }
        context.endAttributes();
        while (idx17 != len17) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Content.get(idx17 ++)), "Content");
        }
        context.endElement();
    }

    public void serializeAttributes(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx17 = 0;
        final int len17 = ((_Content == null)? 0 :_Content.size());
    }

    public void serializeURIs(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx17 = 0;
        final int len17 = ((_Content == null)? 0 :_Content.size());
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.jvnet.olt.filters.xliffsubsegment.xliff.Group.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r"
+"\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u001eppsr\u0000\u001ccom.sun.msv.grammar.ValueExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0004namet\u0000\u001d"
+"Lcom/sun/msv/util/StringPair;L\u0000\u0005valuet\u0000\u0012Ljava/lang/Object;xq"
+"\u0000~\u0000\u0004q\u0000~\u0000#psr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlways"
+"Validxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'co"
+"m.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespace"
+"Urit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000/L\u0000\nwhiteSpacet\u0000.Lcom"
+"/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000/L\u0000\fnamespaceURIq\u0000~\u0000/xpt\u0000"
+"\u000bENUMERATIONt\u0000\u0000t\u0000\u0007defaultsq\u0000~\u0000%q\u0000~\u0000#pq\u0000~\u00001q\u0000~\u00008t\u0000\bpreservesr"
+"\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000/L\u0000\fnamespaceURIq\u0000~\u0000/xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0005spacet\u0000$http://www.w3.org/XML/1998/namespacesr"
+"\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\"\u0001q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#psr\u0000\u001bcom.sun.msv.gramm"
+"ar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtq\u0000~\u0000&L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004nameq\u0000~\u0000\'xq\u0000"
+"~\u0000\u0004ppsr\u0000-com.sun.msv.datatype.xsd.NormalizedStringType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+q\u0000~\u00002t\u0000\u0010normalizedStringsr\u00004com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Replace\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005\u0001sr\u00000com.sun"
+".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004pp"
+"sq\u0000~\u00007t\u0000\u0005CDATAq\u0000~\u0000:sq\u0000~\u0000>t\u0000\bdatatypeq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 "
+"q\u0000~\u0000#pq\u0000~\u0000Isq\u0000~\u0000>t\u0000\u000bmenu-optionq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#"
+"pq\u0000~\u0000Isq\u0000~\u0000>t\u0000\textradataq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000Is"
+"q\u0000~\u0000>t\u0000\u0006extypeq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000Isq\u0000~\u0000>t\u0000\u0005co"
+"ordq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#psq\u0000~\u0000Hppsr\u0000$com.sun.msv.dat"
+"atype.xsd.NmtokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000*q\u0000~\u00002t\u0000\u0007NMTOKENq\u0000~\u00006\u0000q"
+"\u0000~\u0000Psq\u0000~\u00007q\u0000~\u0000jq\u0000~\u0000:sq\u0000~\u0000>t\u0000\u0002idq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#"
+"pq\u0000~\u0000Isq\u0000~\u0000>t\u0000\u0004fontq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000gsq\u0000~\u0000>"
+"t\u0000\u0007help-idq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000Isq\u0000~\u0000>t\u0000\u0007resnam"
+"eq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000gsq\u0000~\u0000>t\u0000\u0007exstyleq\u0000~\u0000:q\u0000~"
+"\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000Isq\u0000~\u0000>t\u0000\u0002tsq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~"
+"\u0000 q\u0000~\u0000#pq\u0000~\u0000Isq\u0000~\u0000>t\u0000\tmenu-nameq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#"
+"pq\u0000~\u0000gsq\u0000~\u0000>t\u0000\u0005styleq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000Isq\u0000~\u0000"
+">t\u0000\tcss-styleq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000Isq\u0000~\u0000>t\u0000\u0004men"
+"uq\u0000~\u0000:q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000Isq\u0000~\u0000>t\u0000\u0007restypeq\u0000~\u0000:q\u0000~"
+"\u0000Dsq\u0000~\u0000\u001eppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~"
+"\u0000#psq\u0000~\u0000\u0000q\u0000~\u0000#p\u0000sq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000 q\u0000~\u0000#psr\u00002com.sun."
+"msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q"
+"\u0000~\u0000Eq\u0000~\u0000\u009fsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000?q\u0000~\u0000Dsq\u0000~\u0000>t\u00005org.jvnet.olt.filters.xliffsubsegment.xliff.Con"
+"textGroupt\u0000+http://java.sun.com/jaxb/xjc/dummy-elementsq\u0000~\u0000D"
+"sq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000\u0000q\u0000~\u0000#p\u0000sq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000 q"
+"\u0000~\u0000#pq\u0000~\u0000\u009fq\u0000~\u0000\u00a1q\u0000~\u0000Dsq\u0000~\u0000>t\u00003com.sun.tt.filters.xliffsubsegm"
+"ent.xliff.CountGroupq\u0000~\u0000\u00a4q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000\u0000q\u0000~\u0000"
+"#p\u0000sq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000\u009fq\u0000~\u0000\u00a1q\u0000~\u0000Dsq\u0000~\u0000>t\u00002c"
+"om.sun.tt.filters.xliffsubsegment.xliff.PropGroupq\u0000~\u0000\u00a4q\u0000~\u0000Ds"
+"q\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000\u0000q\u0000~\u0000#p\u0000sq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000 q\u0000"
+"~\u0000#pq\u0000~\u0000\u009fq\u0000~\u0000\u00a1q\u0000~\u0000Dsq\u0000~\u0000>t\u0000-com.sun.tt.filters.xliffsubsegme"
+"nt.xliff.Noteq\u0000~\u0000\u00a4q\u0000~\u0000Dsq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000\u001eq\u0000~\u0000#psq\u0000~\u0000"
+"\u001eq\u0000~\u0000#psq\u0000~\u0000\u0000q\u0000~\u0000#p\u0000sq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000\u009fq\u0000~"
+"\u0000\u00a1q\u0000~\u0000Dsq\u0000~\u0000>t\u0000.org.jvnet.olt.filters.xliffsubsegment.xliff.Gro"
+"upq\u0000~\u0000\u00a4sq\u0000~\u0000\u0000q\u0000~\u0000#p\u0000sq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000\u009fq\u0000~"
+"\u0000\u00a1q\u0000~\u0000Dsq\u0000~\u0000>t\u00002org.jvnet.olt.filters.xliffsubsegment.xliff.Tra"
+"nsUnitq\u0000~\u0000\u00a4sq\u0000~\u0000\u0000q\u0000~\u0000#p\u0000sq\u0000~\u0000\u001eppsq\u0000~\u0000\u0097q\u0000~\u0000#psq\u0000~\u0000 q\u0000~\u0000#pq\u0000~\u0000"
+"\u009fq\u0000~\u0000\u00a1q\u0000~\u0000Dsq\u0000~\u0000>t\u00000org.jvnet.olt.filters.xliffsubsegment.xliff"
+".BinUnitq\u0000~\u0000\u00a4q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0005groupq\u0000~\u0000:sr\u0000\"com.sun.msv.grammar"
+".ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar"
+"/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Express"
+"ionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pare"
+"ntt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000@\u0001pq\u0000~\u0000\u0086q\u0000~\u0000\u001aq"
+"\u0000~\u0000\u0015q\u0000~\u0000\u00beq\u0000~\u0000\u0010q\u0000~\u0000\u00c8q\u0000~\u0000\u00c2q\u0000~\u0000\u00b8q\u0000~\u0000\u00b0q\u0000~\u0000\u00a8q\u0000~\u0000\u0092q\u0000~\u0000\u009bq\u0000~\u0000\u00ceq\u0000~\u0000rq"
+"\u0000~\u0000\u001dq\u0000~\u0000\u00bfq\u0000~\u0000\u0014q\u0000~\u0000\u0016q\u0000~\u0000\u00bdq\u0000~\u0000Uq\u0000~\u0000\u0012q\u0000~\u0000\u00c9q\u0000~\u0000\u00c3q\u0000~\u0000\u00b9q\u0000~\u0000\u00b1q\u0000~\u0000\u00a9q"
+"\u0000~\u0000\u009cq\u0000~\u0000\u0011q\u0000~\u0000\u00cfq\u0000~\u0000\u0019q\u0000~\u0000\u008aq\u0000~\u0000Fq\u0000~\u0000eq\u0000~\u0000\u00b5q\u0000~\u0000\u00adq\u0000~\u0000\u00a5q\u0000~\u0000\u0096q\u0000~\u0000\u001cq"
+"\u0000~\u0000\nq\u0000~\u0000\u00c0q\u0000~\u0000]q\u0000~\u0000zq\u0000~\u0000\u000bq\u0000~\u0000~q\u0000~\u0000\u0018q\u0000~\u0000\tq\u0000~\u0000\u00b6q\u0000~\u0000\u00aeq\u0000~\u0000\u00a6q\u0000~\u0000\u0099q"
+"\u0000~\u0000\u001fq\u0000~\u0000nq\u0000~\u0000aq\u0000~\u0000\u000eq\u0000~\u0000\u008eq\u0000~\u0000vq\u0000~\u0000\u000fq\u0000~\u0000\u0013q\u0000~\u0000\fq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\rq"
+"\u0000~\u0000Yq\u0000~\u0000\u0082x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------------------------------------------------");
        }

        protected Unmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GroupImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("http://www.w3.org/XML/1998/namespace", "space");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  34 :
                        attIdx = context.getAttribute("", "ts");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 37;
                            continue outer;
                        }
                        state = 37;
                        continue outer;
                    case  53 :
                        if (("context-group" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ContextGroupImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ContextGroupImpl.class), 53, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("count-group" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.CountGroupImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.CountGroupImpl.class), 54, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "resname");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 31;
                            continue outer;
                        }
                        state = 31;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "exstyle");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 34;
                            continue outer;
                        }
                        state = 34;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "extype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  49 :
                        attIdx = context.getAttribute("", "restype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 52;
                            continue outer;
                        }
                        state = 52;
                        continue outer;
                    case  58 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  22 :
                        attIdx = context.getAttribute("", "font");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  0 :
                        if (("group" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  54 :
                        if (("count-group" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.CountGroupImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.CountGroupImpl.class), 54, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("prop-group" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PropGroupImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PropGroupImpl.class), 55, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 55;
                        continue outer;
                    case  55 :
                        if (("prop-group" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PropGroupImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PropGroupImpl.class), 55, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("note" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl.class), 56, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 56;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "coord");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  52 :
                        if (("context-group" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ContextGroupImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ContextGroupImpl.class), 53, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 53;
                        continue outer;
                    case  57 :
                        if (("group" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GroupImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GroupImpl.class), 57, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("trans-unit" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.TransUnitImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.TransUnitImpl.class), 57, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("bin-unit" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinUnitImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinUnitImpl.class), 57, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  43 :
                        attIdx = context.getAttribute("", "css-style");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 46;
                            continue outer;
                        }
                        state = 46;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "datatype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 7;
                            continue outer;
                        }
                        state = 7;
                        continue outer;
                    case  37 :
                        attIdx = context.getAttribute("", "menu-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 40;
                            continue outer;
                        }
                        state = 40;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "extradata");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "help-id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText12(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  56 :
                        if (("note" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl.class), 56, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("group" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GroupImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GroupImpl.class), 57, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("trans-unit" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.TransUnitImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.TransUnitImpl.class), 57, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("bin-unit" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinUnitImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinUnitImpl.class), 57, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  46 :
                        attIdx = context.getAttribute("", "menu");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText13(v);
                            state = 49;
                            continue outer;
                        }
                        state = 49;
                        continue outer;
                    case  19 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText14(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "menu-option");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText15(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  40 :
                        attIdx = context.getAttribute("", "style");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText16(v);
                            state = 43;
                            continue outer;
                        }
                        state = 43;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Ts = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Resname = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Exstyle = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Extype = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Restype = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Font = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Coord = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CssStyle = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Datatype = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MenuName = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Extradata = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _HelpId = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Menu = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MenuOption = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Style = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("http://www.w3.org/XML/1998/namespace", "space");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  34 :
                        attIdx = context.getAttribute("", "ts");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 37;
                            continue outer;
                        }
                        state = 37;
                        continue outer;
                    case  53 :
                        state = 54;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "resname");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 31;
                            continue outer;
                        }
                        state = 31;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "exstyle");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 34;
                            continue outer;
                        }
                        state = 34;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "extype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  49 :
                        attIdx = context.getAttribute("", "restype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 52;
                            continue outer;
                        }
                        state = 52;
                        continue outer;
                    case  58 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  22 :
                        attIdx = context.getAttribute("", "font");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  54 :
                        state = 55;
                        continue outer;
                    case  55 :
                        state = 56;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "coord");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  52 :
                        state = 53;
                        continue outer;
                    case  57 :
                        if (("group" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 58;
                            return ;
                        }
                        break;
                    case  43 :
                        attIdx = context.getAttribute("", "css-style");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 46;
                            continue outer;
                        }
                        state = 46;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "datatype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 7;
                            continue outer;
                        }
                        state = 7;
                        continue outer;
                    case  37 :
                        attIdx = context.getAttribute("", "menu-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 40;
                            continue outer;
                        }
                        state = 40;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "extradata");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "help-id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText12(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  56 :
                        state = 57;
                        continue outer;
                    case  46 :
                        attIdx = context.getAttribute("", "menu");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText13(v);
                            state = 49;
                            continue outer;
                        }
                        state = 49;
                        continue outer;
                    case  19 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText14(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "menu-option");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText15(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  40 :
                        attIdx = context.getAttribute("", "style");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText16(v);
                            state = 43;
                            continue outer;
                        }
                        state = 43;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("space" == ___local)&&("http://www.w3.org/XML/1998/namespace" == ___uri)) {
                            state = 2;
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  34 :
                        if (("ts" == ___local)&&("" == ___uri)) {
                            state = 35;
                            return ;
                        }
                        state = 37;
                        continue outer;
                    case  53 :
                        state = 54;
                        continue outer;
                    case  28 :
                        if (("resname" == ___local)&&("" == ___uri)) {
                            state = 29;
                            return ;
                        }
                        state = 31;
                        continue outer;
                    case  31 :
                        if (("exstyle" == ___local)&&("" == ___uri)) {
                            state = 32;
                            return ;
                        }
                        state = 34;
                        continue outer;
                    case  13 :
                        if (("extype" == ___local)&&("" == ___uri)) {
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  49 :
                        if (("restype" == ___local)&&("" == ___uri)) {
                            state = 50;
                            return ;
                        }
                        state = 52;
                        continue outer;
                    case  58 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  22 :
                        if (("font" == ___local)&&("" == ___uri)) {
                            state = 23;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  54 :
                        state = 55;
                        continue outer;
                    case  55 :
                        state = 56;
                        continue outer;
                    case  16 :
                        if (("coord" == ___local)&&("" == ___uri)) {
                            state = 17;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  52 :
                        state = 53;
                        continue outer;
                    case  43 :
                        if (("css-style" == ___local)&&("" == ___uri)) {
                            state = 44;
                            return ;
                        }
                        state = 46;
                        continue outer;
                    case  4 :
                        if (("datatype" == ___local)&&("" == ___uri)) {
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  37 :
                        if (("menu-name" == ___local)&&("" == ___uri)) {
                            state = 38;
                            return ;
                        }
                        state = 40;
                        continue outer;
                    case  10 :
                        if (("extradata" == ___local)&&("" == ___uri)) {
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  25 :
                        if (("help-id" == ___local)&&("" == ___uri)) {
                            state = 26;
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  56 :
                        state = 57;
                        continue outer;
                    case  46 :
                        if (("menu" == ___local)&&("" == ___uri)) {
                            state = 47;
                            return ;
                        }
                        state = 49;
                        continue outer;
                    case  19 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  7 :
                        if (("menu-option" == ___local)&&("" == ___uri)) {
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  40 :
                        if (("style" == ___local)&&("" == ___uri)) {
                            state = 41;
                            return ;
                        }
                        state = 43;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("http://www.w3.org/XML/1998/namespace", "space");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  34 :
                        attIdx = context.getAttribute("", "ts");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 37;
                            continue outer;
                        }
                        state = 37;
                        continue outer;
                    case  53 :
                        state = 54;
                        continue outer;
                    case  12 :
                        if (("extradata" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("extype" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                    case  28 :
                        attIdx = context.getAttribute("", "resname");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 31;
                            continue outer;
                        }
                        state = 31;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "exstyle");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 34;
                            continue outer;
                        }
                        state = 34;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "extype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  36 :
                        if (("ts" == ___local)&&("" == ___uri)) {
                            state = 37;
                            return ;
                        }
                        break;
                    case  49 :
                        attIdx = context.getAttribute("", "restype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 52;
                            continue outer;
                        }
                        state = 52;
                        continue outer;
                    case  58 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  22 :
                        attIdx = context.getAttribute("", "font");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  6 :
                        if (("datatype" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  54 :
                        state = 55;
                        continue outer;
                    case  55 :
                        state = 56;
                        continue outer;
                    case  39 :
                        if (("menu-name" == ___local)&&("" == ___uri)) {
                            state = 40;
                            return ;
                        }
                        break;
                    case  45 :
                        if (("css-style" == ___local)&&("" == ___uri)) {
                            state = 46;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("menu-option" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "coord");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  52 :
                        state = 53;
                        continue outer;
                    case  43 :
                        attIdx = context.getAttribute("", "css-style");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 46;
                            continue outer;
                        }
                        state = 46;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "datatype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 7;
                            continue outer;
                        }
                        state = 7;
                        continue outer;
                    case  21 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        break;
                    case  30 :
                        if (("resname" == ___local)&&("" == ___uri)) {
                            state = 31;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("space" == ___local)&&("http://www.w3.org/XML/1998/namespace" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  42 :
                        if (("style" == ___local)&&("" == ___uri)) {
                            state = 43;
                            return ;
                        }
                        break;
                    case  27 :
                        if (("help-id" == ___local)&&("" == ___uri)) {
                            state = 28;
                            return ;
                        }
                        break;
                    case  37 :
                        attIdx = context.getAttribute("", "menu-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 40;
                            continue outer;
                        }
                        state = 40;
                        continue outer;
                    case  18 :
                        if (("coord" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "extradata");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  51 :
                        if (("restype" == ___local)&&("" == ___uri)) {
                            state = 52;
                            return ;
                        }
                        break;
                    case  25 :
                        attIdx = context.getAttribute("", "help-id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText12(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  56 :
                        state = 57;
                        continue outer;
                    case  46 :
                        attIdx = context.getAttribute("", "menu");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText13(v);
                            state = 49;
                            continue outer;
                        }
                        state = 49;
                        continue outer;
                    case  24 :
                        if (("font" == ___local)&&("" == ___uri)) {
                            state = 25;
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText14(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "menu-option");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText15(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  33 :
                        if (("exstyle" == ___local)&&("" == ___uri)) {
                            state = 34;
                            return ;
                        }
                        break;
                    case  48 :
                        if (("menu" == ___local)&&("" == ___uri)) {
                            state = 49;
                            return ;
                        }
                        break;
                    case  40 :
                        attIdx = context.getAttribute("", "style");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText16(v);
                            state = 43;
                            continue outer;
                        }
                        state = 43;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("http://www.w3.org/XML/1998/namespace", "space");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            state = 4;
                            continue outer;
                        case  50 :
                            eatText5(value);
                            state = 51;
                            return ;
                        case  34 :
                            attIdx = context.getAttribute("", "ts");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 37;
                                continue outer;
                            }
                            state = 37;
                            continue outer;
                        case  2 :
                            if (___dt0 .isValid(value, null)) {
                                eatText17(value);
                                state = 3;
                                return ;
                            }
                            if (___dt1 .isValid(value, null)) {
                                eatText18(value);
                                state = 3;
                                return ;
                            }
                            break;
                        case  53 :
                            state = 54;
                            continue outer;
                        case  28 :
                            attIdx = context.getAttribute("", "resname");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 31;
                                continue outer;
                            }
                            state = 31;
                            continue outer;
                        case  31 :
                            attIdx = context.getAttribute("", "exstyle");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 34;
                                continue outer;
                            }
                            state = 34;
                            continue outer;
                        case  41 :
                            eatText16(value);
                            state = 42;
                            return ;
                        case  13 :
                            attIdx = context.getAttribute("", "extype");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 16;
                                continue outer;
                            }
                            state = 16;
                            continue outer;
                        case  49 :
                            attIdx = context.getAttribute("", "restype");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 52;
                                continue outer;
                            }
                            state = 52;
                            continue outer;
                        case  58 :
                            revertToParentFromText(value);
                            return ;
                        case  22 :
                            attIdx = context.getAttribute("", "font");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 25;
                                continue outer;
                            }
                            state = 25;
                            continue outer;
                        case  32 :
                            eatText3(value);
                            state = 33;
                            return ;
                        case  11 :
                            eatText11(value);
                            state = 12;
                            return ;
                        case  54 :
                            state = 55;
                            continue outer;
                        case  55 :
                            state = 56;
                            continue outer;
                        case  38 :
                            eatText10(value);
                            state = 39;
                            return ;
                        case  35 :
                            eatText1(value);
                            state = 36;
                            return ;
                        case  47 :
                            eatText13(value);
                            state = 48;
                            return ;
                        case  17 :
                            eatText7(value);
                            state = 18;
                            return ;
                        case  16 :
                            attIdx = context.getAttribute("", "coord");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 19;
                                continue outer;
                            }
                            state = 19;
                            continue outer;
                        case  52 :
                            state = 53;
                            continue outer;
                        case  20 :
                            eatText14(value);
                            state = 21;
                            return ;
                        case  26 :
                            eatText12(value);
                            state = 27;
                            return ;
                        case  43 :
                            attIdx = context.getAttribute("", "css-style");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 46;
                                continue outer;
                            }
                            state = 46;
                            continue outer;
                        case  5 :
                            eatText9(value);
                            state = 6;
                            return ;
                        case  4 :
                            attIdx = context.getAttribute("", "datatype");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 7;
                                continue outer;
                            }
                            state = 7;
                            continue outer;
                        case  23 :
                            eatText6(value);
                            state = 24;
                            return ;
                        case  29 :
                            eatText2(value);
                            state = 30;
                            return ;
                        case  37 :
                            attIdx = context.getAttribute("", "menu-name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText10(v);
                                state = 40;
                                continue outer;
                            }
                            state = 40;
                            continue outer;
                        case  14 :
                            eatText4(value);
                            state = 15;
                            return ;
                        case  44 :
                            eatText8(value);
                            state = 45;
                            return ;
                        case  10 :
                            attIdx = context.getAttribute("", "extradata");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText11(v);
                                state = 13;
                                continue outer;
                            }
                            state = 13;
                            continue outer;
                        case  25 :
                            attIdx = context.getAttribute("", "help-id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText12(v);
                                state = 28;
                                continue outer;
                            }
                            state = 28;
                            continue outer;
                        case  56 :
                            state = 57;
                            continue outer;
                        case  8 :
                            eatText15(value);
                            state = 9;
                            return ;
                        case  46 :
                            attIdx = context.getAttribute("", "menu");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText13(v);
                                state = 49;
                                continue outer;
                            }
                            state = 49;
                            continue outer;
                        case  19 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText14(v);
                                state = 22;
                                continue outer;
                            }
                            state = 22;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "menu-option");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText15(v);
                                state = 10;
                                continue outer;
                            }
                            state = 10;
                            continue outer;
                        case  40 :
                            attIdx = context.getAttribute("", "style");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText16(v);
                                state = 43;
                                continue outer;
                            }
                            state = 43;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _XmlSpace = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _XmlSpace = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
