
/*
 * Copyright  2005 Sun Microsystems, Inc. 
 * All rights reserved Use is subject to license terms.
 *
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.10.08 at 01:50:51 BST 
//


package org.jvnet.olt.filters.xliffsubsegment.xliff.impl;

public class PhaseImpl implements org.jvnet.olt.filters.xliffsubsegment.xliff.Phase, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallableObject, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializable, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.ValidatableObject
{

    protected java.lang.String _ProcessName;
    protected java.lang.String _PhaseName;
    protected java.lang.String _ContactEmail;
    protected java.lang.String _Tool;
    protected java.lang.String _JobId;
    protected java.lang.String _Date;
    protected java.lang.String _ContactName;
    protected com.sun.xml.bind.util.ListImpl _Note;
    protected java.lang.String _CompanyName;
    protected java.lang.String _ContactPhone;
    public final static java.lang.Class version = (org.jvnet.olt.filters.xliffsubsegment.xliff.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.jvnet.olt.filters.xliffsubsegment.xliff.Phase.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "phase";
    }

    public java.lang.String getProcessName() {
        return _ProcessName;
    }

    public void setProcessName(java.lang.String value) {
        _ProcessName = value;
    }

    public java.lang.String getPhaseName() {
        return _PhaseName;
    }

    public void setPhaseName(java.lang.String value) {
        _PhaseName = value;
    }

    public java.lang.String getContactEmail() {
        return _ContactEmail;
    }

    public void setContactEmail(java.lang.String value) {
        _ContactEmail = value;
    }

    public java.lang.String getTool() {
        return _Tool;
    }

    public void setTool(java.lang.String value) {
        _Tool = value;
    }

    public java.lang.String getJobId() {
        return _JobId;
    }

    public void setJobId(java.lang.String value) {
        _JobId = value;
    }

    public java.lang.String getDate() {
        return _Date;
    }

    public void setDate(java.lang.String value) {
        _Date = value;
    }

    public java.lang.String getContactName() {
        return _ContactName;
    }

    public void setContactName(java.lang.String value) {
        _ContactName = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getNote() {
        if (_Note == null) {
            _Note = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Note;
    }

    public java.util.List getNote() {
        return _getNote();
    }

    public java.lang.String getCompanyName() {
        return _CompanyName;
    }

    public void setCompanyName(java.lang.String value) {
        _CompanyName = value;
    }

    public java.lang.String getContactPhone() {
        return _ContactPhone;
    }

    public void setContactPhone(java.lang.String value) {
        _ContactPhone = value;
    }

    public org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context) {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PhaseImpl.Unmarshaller(context);
    }

    public void serializeBody(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx8 = 0;
        final int len8 = ((_Note == null)? 0 :_Note.size());
        context.startElement("", "phase");
        int idx_5 = idx8;
        while (idx_5 != len8) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Note.get(idx_5 ++)), "Note");
        }
        context.endNamespaceDecls();
        int idx_10 = idx8;
        if (_ContactPhone!= null) {
            context.startAttribute("", "contact-phone");
            try {
                context.text(((java.lang.String) _ContactPhone), "ContactPhone");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_CompanyName!= null) {
            context.startAttribute("", "company-name");
            try {
                context.text(((java.lang.String) _CompanyName), "CompanyName");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ContactEmail!= null) {
            context.startAttribute("", "contact-email");
            try {
                context.text(((java.lang.String) _ContactEmail), "ContactEmail");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "phase-name");
        try {
            context.text(((java.lang.String) _PhaseName), "PhaseName");
        } catch (java.lang.Exception e) {
            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "process-name");
        try {
            context.text(((java.lang.String) _ProcessName), "ProcessName");
        } catch (java.lang.Exception e) {
            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_ContactName!= null) {
            context.startAttribute("", "contact-name");
            try {
                context.text(((java.lang.String) _ContactName), "ContactName");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Tool!= null) {
            context.startAttribute("", "tool");
            try {
                context.text(((java.lang.String) _Tool), "Tool");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Date!= null) {
            context.startAttribute("", "date");
            try {
                context.text(((java.lang.String) _Date), "Date");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_JobId!= null) {
            context.startAttribute("", "job-id");
            try {
                context.text(((java.lang.String) _JobId), "JobId");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx_10 != len8) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Note.get(idx_10 ++)), "Note");
        }
        context.endAttributes();
        while (idx8 != len8) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Note.get(idx8 ++)), "Note");
        }
        context.endElement();
    }

    public void serializeAttributes(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx8 = 0;
        final int len8 = ((_Note == null)? 0 :_Note.size());
    }

    public void serializeURIs(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx8 = 0;
        final int len8 = ((_Note == null)? 0 :_Note.size());
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.jvnet.olt.filters.xliffsubsegment.xliff.Phase.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.m"
+"sv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004"
+"sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv."
+"grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Data"
+"type;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq"
+"\u0000~\u0000\u0004ppsr\u0000-com.sun.msv.datatype.xsd.NormalizedStringType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\ri"
+"sAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpace"
+"t\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:/"
+"/www.w3.org/2001/XMLSchemat\u0000\u0010normalizedStringsr\u00004com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Replace\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000co"
+"m.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq"
+"\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpt\u0000\u0005CDATAt\u0000\u0000sr\u0000#com.sun.msv.grammar"
+".SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq"
+"\u0000~\u0000!xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\rcontact"
+"-phoneq\u0000~\u0000.sr\u00000com.sun.msv.grammar.Expression$EpsilonExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0016\u0001q\u0000~\u00004sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0014q\u0000~\u0000\u0017pq\u0000~\u0000\u001bsq\u0000"
+"~\u0000/t\u0000\fcompany-nameq\u0000~\u0000.q\u0000~\u00004sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0014q\u0000~\u0000\u0017pq\u0000~\u0000\u001bsq\u0000~\u0000/t"
+"\u0000\rcontact-emailq\u0000~\u0000.q\u0000~\u00004sq\u0000~\u0000\u0014ppq\u0000~\u0000\u001bsq\u0000~\u0000/t\u0000\nphase-nameq\u0000~"
+"\u0000.sq\u0000~\u0000\u0014ppq\u0000~\u0000\u001bsq\u0000~\u0000/t\u0000\fprocess-nameq\u0000~\u0000.sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0014q\u0000~\u0000\u0017"
+"pq\u0000~\u0000\u001bsq\u0000~\u0000/t\u0000\fcontact-nameq\u0000~\u0000.q\u0000~\u00004sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0014q\u0000~\u0000\u0017pq\u0000~"
+"\u0000\u001bsq\u0000~\u0000/t\u0000\u0004toolq\u0000~\u0000.q\u0000~\u00004sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0014q\u0000~\u0000\u0017pq\u0000~\u0000\u001bsq\u0000~\u0000/t\u0000\u0004d"
+"ateq\u0000~\u0000.q\u0000~\u00004sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0014q\u0000~\u0000\u0017pq\u0000~\u0000\u001bsq\u0000~\u0000/t\u0000\u0006job-idq\u0000~\u0000.q\u0000"
+"~\u00004sq\u0000~\u0000\u0012ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000"
+"~\u0000\u0017psq\u0000~\u0000\u0000q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000Uq\u0000~\u0000\u0017psq\u0000~\u0000\u0014q\u0000~\u0000\u0017psr\u00002com.sun"
+".msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004"
+"q\u0000~\u00005q\u0000~\u0000]sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u00000q\u0000~\u00004sq\u0000~\u0000/t\u0000-org.jvnet.olt.filters.xliffsubsegment.xliff.No"
+"tet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementsq\u0000~\u00004sq\u0000~\u0000/t"
+"\u0000\u0005phaseq\u0000~\u0000.sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHas"
+"h;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed"
+"\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar"
+"/ExpressionPool;xp\u0000\u0000\u0000\u0014\u0001pq\u0000~\u0000\u000eq\u0000~\u0000\u0013q\u0000~\u0000\u0010q\u0000~\u0000Hq\u0000~\u0000\fq\u0000~\u0000Tq\u0000~\u0000\u000fq"
+"\u0000~\u0000Lq\u0000~\u0000\nq\u0000~\u0000Yq\u0000~\u0000Dq\u0000~\u0000\u0011q\u0000~\u0000Pq\u0000~\u0000Wq\u0000~\u00006q\u0000~\u0000\tq\u0000~\u0000Zq\u0000~\u0000\u000bq\u0000~\u0000:q"
+"\u0000~\u0000\rx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------");
        }

        protected Unmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PhaseImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  30 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  19 :
                        attIdx = context.getAttribute("", "tool");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  0 :
                        if (("phase" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("note" == ___local)&&("" == ___uri)) {
                            _getNote().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl.class), 29, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "contact-phone");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "phase-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 13;
                            continue outer;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "contact-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  28 :
                        if (("note" == ___local)&&("" == ___uri)) {
                            _getNote().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl.class), 29, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 29;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "job-id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "process-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 16;
                            continue outer;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "company-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 7;
                            continue outer;
                        }
                        state = 7;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "date");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "contact-email");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Tool = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ContactPhone = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PhaseName = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ContactName = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _JobId = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProcessName = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CompanyName = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Date = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ContactEmail = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  30 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        attIdx = context.getAttribute("", "tool");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  29 :
                        if (("phase" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "contact-phone");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "phase-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 13;
                            continue outer;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "contact-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  28 :
                        state = 29;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "job-id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "process-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 16;
                            continue outer;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "company-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 7;
                            continue outer;
                        }
                        state = 7;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "date");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "contact-email");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  30 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        if (("tool" == ___local)&&("" == ___uri)) {
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  1 :
                        if (("contact-phone" == ___local)&&("" == ___uri)) {
                            state = 2;
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  10 :
                        if (("phase-name" == ___local)&&("" == ___uri)) {
                            state = 11;
                            return ;
                        }
                        break;
                    case  16 :
                        if (("contact-name" == ___local)&&("" == ___uri)) {
                            state = 17;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  28 :
                        state = 29;
                        continue outer;
                    case  25 :
                        if (("job-id" == ___local)&&("" == ___uri)) {
                            state = 26;
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  13 :
                        if (("process-name" == ___local)&&("" == ___uri)) {
                            state = 14;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("company-name" == ___local)&&("" == ___uri)) {
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  22 :
                        if (("date" == ___local)&&("" == ___uri)) {
                            state = 23;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  7 :
                        if (("contact-email" == ___local)&&("" == ___uri)) {
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("company-name" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  30 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        attIdx = context.getAttribute("", "tool");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  24 :
                        if (("date" == ___local)&&("" == ___uri)) {
                            state = 25;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "contact-phone");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "phase-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 13;
                            continue outer;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "contact-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  9 :
                        if (("contact-email" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  28 :
                        state = 29;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "job-id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  3 :
                        if (("contact-phone" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("phase-name" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        break;
                    case  27 :
                        if (("job-id" == ___local)&&("" == ___uri)) {
                            state = 28;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("tool" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "process-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 16;
                            continue outer;
                        }
                        break;
                    case  18 :
                        if (("contact-name" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "company-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 7;
                            continue outer;
                        }
                        state = 7;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "date");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "contact-email");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  15 :
                        if (("process-name" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  30 :
                            revertToParentFromText(value);
                            return ;
                        case  20 :
                            eatText1(value);
                            state = 21;
                            return ;
                        case  19 :
                            attIdx = context.getAttribute("", "tool");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 22;
                                continue outer;
                            }
                            state = 22;
                            continue outer;
                        case  23 :
                            eatText8(value);
                            state = 24;
                            return ;
                        case  2 :
                            eatText2(value);
                            state = 3;
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "contact-phone");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 4;
                                continue outer;
                            }
                            state = 4;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "phase-name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 13;
                                continue outer;
                            }
                            break;
                        case  16 :
                            attIdx = context.getAttribute("", "contact-name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 19;
                                continue outer;
                            }
                            state = 19;
                            continue outer;
                        case  8 :
                            eatText9(value);
                            state = 9;
                            return ;
                        case  5 :
                            eatText7(value);
                            state = 6;
                            return ;
                        case  28 :
                            state = 29;
                            continue outer;
                        case  25 :
                            attIdx = context.getAttribute("", "job-id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 28;
                                continue outer;
                            }
                            state = 28;
                            continue outer;
                        case  17 :
                            eatText4(value);
                            state = 18;
                            return ;
                        case  14 :
                            eatText6(value);
                            state = 15;
                            return ;
                        case  13 :
                            attIdx = context.getAttribute("", "process-name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 16;
                                continue outer;
                            }
                            break;
                        case  4 :
                            attIdx = context.getAttribute("", "company-name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 7;
                                continue outer;
                            }
                            state = 7;
                            continue outer;
                        case  11 :
                            eatText3(value);
                            state = 12;
                            return ;
                        case  22 :
                            attIdx = context.getAttribute("", "date");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 25;
                                continue outer;
                            }
                            state = 25;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "contact-email");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 10;
                                continue outer;
                            }
                            state = 10;
                            continue outer;
                        case  26 :
                            eatText5(value);
                            state = 27;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
