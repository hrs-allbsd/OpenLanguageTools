
/*
 * Copyright  2005 Sun Microsystems, Inc. 
 * All rights reserved Use is subject to license terms.
 *
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.10.08 at 01:50:51 BST 
//


package org.jvnet.olt.filters.xliffsubsegment.xliff;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.jvnet.olt.filters.xliffsubsegment.xliff package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(49, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.GrammarInfo grammarInfo = new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (org.jvnet.olt.filters.xliffsubsegment.xliff.ObjectFactory.class));
    public final static java.lang.Class version = (org.jvnet.olt.filters.xliffsubsegment.xliff.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.PropGroup.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PropGroupImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Skl.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.SklImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.X.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.XImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.TransUnit.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.TransUnitImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.BinTarget.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinTargetImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.InternalFile.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.InternalFileImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Ph.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PhImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Glossary.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GlossaryImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Mrk.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.MrkImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.It.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ItImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Reference.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ReferenceImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.BinSource.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinSourceImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Note.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Prop.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PropImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Body.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BodyImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.G.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Context.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ContextImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Bx.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BxImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.PhaseGroup.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PhaseGroupImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Group.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GroupImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Target.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.TargetImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Sub.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.SubImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Xliff.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.XliffImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.CountGroup.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.CountGroupImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Phase.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PhaseImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Ept.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.EptImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Source.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.SourceImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.AltTrans.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.AltTransImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.File.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.FileImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.ContextGroup.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ContextGroupImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Ex.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ExImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.BinUnit.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinUnitImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Count.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.CountImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.ExternalFile.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ExternalFileImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Header.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.HeaderImpl");
        defaultImplementations.put((org.jvnet.olt.filters.xliffsubsegment.xliff.Bpt.class), "org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BptImpl");
        rootTagMap.put(new javax.xml.namespace.QName("", "mrk"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Mrk.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "bin-unit"), (org.jvnet.olt.filters.xliffsubsegment.xliff.BinUnit.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "target"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Target.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "sub"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Sub.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "file"), (org.jvnet.olt.filters.xliffsubsegment.xliff.File.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "xliff"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Xliff.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "internal-file"), (org.jvnet.olt.filters.xliffsubsegment.xliff.InternalFile.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "bx"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Bx.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "prop-group"), (org.jvnet.olt.filters.xliffsubsegment.xliff.PropGroup.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "skl"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Skl.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "trans-unit"), (org.jvnet.olt.filters.xliffsubsegment.xliff.TransUnit.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "context"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Context.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "phase"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Phase.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "body"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Body.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "group"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Group.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "prop"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Prop.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ept"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Ept.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "header"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Header.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ph"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Ph.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "g"), (org.jvnet.olt.filters.xliffsubsegment.xliff.G.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "note"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Note.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ex"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Ex.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "phase-group"), (org.jvnet.olt.filters.xliffsubsegment.xliff.PhaseGroup.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "external-file"), (org.jvnet.olt.filters.xliffsubsegment.xliff.ExternalFile.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "alt-trans"), (org.jvnet.olt.filters.xliffsubsegment.xliff.AltTrans.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "context-group"), (org.jvnet.olt.filters.xliffsubsegment.xliff.ContextGroup.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "bpt"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Bpt.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "it"), (org.jvnet.olt.filters.xliffsubsegment.xliff.It.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "count-group"), (org.jvnet.olt.filters.xliffsubsegment.xliff.CountGroup.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "bin-source"), (org.jvnet.olt.filters.xliffsubsegment.xliff.BinSource.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "glossary"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Glossary.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "source"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Source.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "count"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Count.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "x"), (org.jvnet.olt.filters.xliffsubsegment.xliff.X.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "bin-target"), (org.jvnet.olt.filters.xliffsubsegment.xliff.BinTarget.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "reference"), (org.jvnet.olt.filters.xliffsubsegment.xliff.Reference.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.jvnet.olt.filters.xliffsubsegment.xliff
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of PropGroup
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.PropGroup createPropGroup()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PropGroupImpl();
    }

    /**
     * Create an instance of Skl
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Skl createSkl()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.SklImpl();
    }

    /**
     * Create an instance of X
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.X createX()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.XImpl();
    }

    /**
     * Create an instance of TransUnit
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.TransUnit createTransUnit()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.TransUnitImpl();
    }

    /**
     * Create an instance of BinTarget
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.BinTarget createBinTarget()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinTargetImpl();
    }

    /**
     * Create an instance of InternalFile
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.InternalFile createInternalFile()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.InternalFileImpl();
    }

    /**
     * Create an instance of Ph
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Ph createPh()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PhImpl();
    }

    /**
     * Create an instance of Glossary
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Glossary createGlossary()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GlossaryImpl();
    }

    /**
     * Create an instance of Mrk
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Mrk createMrk()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.MrkImpl();
    }

    /**
     * Create an instance of It
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.It createIt()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ItImpl();
    }

    /**
     * Create an instance of Reference
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Reference createReference()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ReferenceImpl();
    }

    /**
     * Create an instance of BinSource
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.BinSource createBinSource()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinSourceImpl();
    }

    /**
     * Create an instance of Note
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Note createNote()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.NoteImpl();
    }

    /**
     * Create an instance of Prop
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Prop createProp()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PropImpl();
    }

    /**
     * Create an instance of Body
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Body createBody()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BodyImpl();
    }

    /**
     * Create an instance of G
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.G createG()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GImpl();
    }

    /**
     * Create an instance of Context
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Context createContext()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ContextImpl();
    }

    /**
     * Create an instance of Bx
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Bx createBx()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BxImpl();
    }

    /**
     * Create an instance of PhaseGroup
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.PhaseGroup createPhaseGroup()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PhaseGroupImpl();
    }

    /**
     * Create an instance of Group
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Group createGroup()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.GroupImpl();
    }

    /**
     * Create an instance of Target
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Target createTarget()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.TargetImpl();
    }

    /**
     * Create an instance of Sub
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Sub createSub()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.SubImpl();
    }

    /**
     * Create an instance of Xliff
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Xliff createXliff()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.XliffImpl();
    }

    /**
     * Create an instance of CountGroup
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.CountGroup createCountGroup()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.CountGroupImpl();
    }

    /**
     * Create an instance of Phase
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Phase createPhase()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.PhaseImpl();
    }

    /**
     * Create an instance of Ept
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Ept createEpt()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.EptImpl();
    }

    /**
     * Create an instance of Source
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Source createSource()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.SourceImpl();
    }

    /**
     * Create an instance of AltTrans
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.AltTrans createAltTrans()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.AltTransImpl();
    }

    /**
     * Create an instance of File
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.File createFile()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.FileImpl();
    }

    /**
     * Create an instance of ContextGroup
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.ContextGroup createContextGroup()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ContextGroupImpl();
    }

    /**
     * Create an instance of Ex
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Ex createEx()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ExImpl();
    }

    /**
     * Create an instance of BinUnit
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.BinUnit createBinUnit()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BinUnitImpl();
    }

    /**
     * Create an instance of Count
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Count createCount()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.CountImpl();
    }

    /**
     * Create an instance of ExternalFile
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.ExternalFile createExternalFile()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ExternalFileImpl();
    }

    /**
     * Create an instance of Header
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Header createHeader()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.HeaderImpl();
    }

    /**
     * Create an instance of Bpt
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public org.jvnet.olt.filters.xliffsubsegment.xliff.Bpt createBpt()
        throws javax.xml.bind.JAXBException
    {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.BptImpl();
    }

}
