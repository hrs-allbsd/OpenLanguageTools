
/*
 * Copyright  2005 Sun Microsystems, Inc. 
 * All rights reserved Use is subject to license terms.
 *
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.10.08 at 01:50:51 BST 
//


package org.jvnet.olt.filters.xliffsubsegment.xliff.impl;

public class ItImpl implements org.jvnet.olt.filters.xliffsubsegment.xliff.It, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallableObject, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializable, org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.ValidatableObject
{

    protected java.lang.String _Ts;
    protected java.lang.String _Pos;
    protected java.lang.String _Crc;
    protected java.lang.String _Ctype;
    protected com.sun.xml.bind.util.ListImpl _Content;
    protected java.lang.String _Id;
    protected java.lang.String _Rid;
    public final static java.lang.Class version = (org.jvnet.olt.filters.xliffsubsegment.xliff.impl.JAXBVersion.class);
    private final static org.relaxng.datatype.Datatype ___dt0 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private final static org.relaxng.datatype.Datatype ___dt1 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.jvnet.olt.filters.xliffsubsegment.xliff.It.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "it";
    }

    public java.lang.String getTs() {
        return _Ts;
    }

    public void setTs(java.lang.String value) {
        _Ts = value;
    }

    public java.lang.String getPos() {
        return _Pos;
    }

    public void setPos(java.lang.String value) {
        _Pos = value;
    }

    public java.lang.String getCrc() {
        return _Crc;
    }

    public void setCrc(java.lang.String value) {
        _Crc = value;
    }

    public java.lang.String getCtype() {
        return _Ctype;
    }

    public void setCtype(java.lang.String value) {
        _Ctype = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getContent() {
        if (_Content == null) {
            _Content = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Content;
    }

    public java.util.List getContent() {
        return _getContent();
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public java.lang.String getRid() {
        return _Rid;
    }

    public void setRid(java.lang.String value) {
        _Rid = value;
    }

    public org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context) {
        return new org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ItImpl.Unmarshaller(context);
    }

    public void serializeBody(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_Content == null)? 0 :_Content.size());
        context.startElement("", "it");
        int idx_6 = idx5;
        {
            java.lang.Object o = _Pos;
        }
        while (idx_6 != len5) {
            {
                java.lang.Object o = _Content.get(idx_6);
                if (o instanceof com.sun.xml.bind.JAXBObject) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Content.get(idx_6 ++)), "Content");
                } else {
                    if (o instanceof java.lang.String) {
                        try {
                            idx_6 += 1;
                        } catch (java.lang.Exception e) {
                            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                    } else {
                        org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handleTypeMismatchError(context, this, "Content", o);
                    }
                }
            }
        }
        context.endNamespaceDecls();
        int idx_7 = idx5;
        if (_Ts!= null) {
            context.startAttribute("", "ts");
            try {
                context.text(((java.lang.String) _Ts), "Ts");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "pos");
        {
            java.lang.Object o = _Pos;
            if (o instanceof java.lang.String) {
                try {
                    context.text(((java.lang.String) _Pos), "Pos");
                } catch (java.lang.Exception e) {
                    org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            } else {
                if (o instanceof java.lang.String) {
                    try {
                        context.text(((java.lang.String) _Pos), "Pos");
                    } catch (java.lang.Exception e) {
                        org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                } else {
                    org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handleTypeMismatchError(context, this, "Pos", o);
                }
            }
        }
        context.endAttribute();
        if (_Crc!= null) {
            context.startAttribute("", "crc");
            try {
                context.text(((java.lang.String) _Crc), "Crc");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Ctype!= null) {
            context.startAttribute("", "ctype");
            try {
                context.text(((java.lang.String) _Ctype), "Ctype");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Rid!= null) {
            context.startAttribute("", "rid");
            try {
                context.text(((java.lang.String) _Rid), "Rid");
            } catch (java.lang.Exception e) {
                org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "id");
        try {
            context.text(((java.lang.String) _Id), "Id");
        } catch (java.lang.Exception e) {
            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx_7 != len5) {
            {
                java.lang.Object o = _Content.get(idx_7);
                if (o instanceof com.sun.xml.bind.JAXBObject) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Content.get(idx_7 ++)), "Content");
                } else {
                    if (o instanceof java.lang.String) {
                        try {
                            idx_7 += 1;
                        } catch (java.lang.Exception e) {
                            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                    } else {
                        org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handleTypeMismatchError(context, this, "Content", o);
                    }
                }
            }
        }
        context.endAttributes();
        while (idx5 != len5) {
            {
                java.lang.Object o = _Content.get(idx5);
                if (o instanceof com.sun.xml.bind.JAXBObject) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Content.get(idx5 ++)), "Content");
                } else {
                    if (o instanceof java.lang.String) {
                        try {
                            context.text(((java.lang.String) _Content.get(idx5 ++)), "Content");
                        } catch (java.lang.Exception e) {
                            org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                    } else {
                        org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.Util.handleTypeMismatchError(context, this, "Content", o);
                    }
                }
            }
        }
        context.endElement();
    }

    public void serializeAttributes(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_Content == null)? 0 :_Content.size());
    }

    public void serializeURIs(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_Content == null)? 0 :_Content.size());
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.jvnet.olt.filters.xliffsubsegment.xliff.It.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r"
+"\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004na"
+"met\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000-com.sun.msv.da"
+"tatype.xsd.NormalizedStringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.da"
+"tatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun."
+"msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv"
+".datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatyp"
+"e.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/"
+"String;L\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype"
+"/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSche"
+"mat\u0000\u0010normalizedStringsr\u00004com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor$Replace\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expres"
+"sion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001e"
+"xpt\u0000\u0005CDATAt\u0000\u0000sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001exr\u0000\u001dcom.sun.msv.gram"
+"mar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0002tsq\u0000~\u0000+sr\u00000com.sun.msv.grammar."
+"Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0013\u0001q\u0000~\u00001sq\u0000"
+"~\u0000\u0011ppsq\u0000~\u0000\u000fppsr\u0000\u001ccom.sun.msv.grammar.ValueExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002d"
+"tq\u0000~\u0000\u0016L\u0000\u0004nameq\u0000~\u0000\u0017L\u0000\u0005valuet\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000\u0004q\u0000~\u0000\u0014ps"
+"r\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000!t"
+"\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Coll"
+"apse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$\u0001sq\u0000~\u0000(t\u0000\u000bENUMERATIONq\u0000~\u0000+t\u0000\u0004opensq\u0000~\u00005"
+"q\u0000~\u0000\u0014pq\u0000~\u00009q\u0000~\u0000=t\u0000\u0005closesq\u0000~\u0000,t\u0000\u0003posq\u0000~\u0000+sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0014"
+"psq\u0000~\u0000\u0015ppsr\u0000$com.sun.msv.datatype.xsd.NmtokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u00008q\u0000~\u0000!t\u0000\u0007NMTOKENq\u0000~\u0000<\u0000q\u0000~\u0000\'sq\u0000~\u0000(q\u0000~\u0000Iq\u0000~\u0000+sq\u0000~\u0000,t\u0000\u0003crc"
+"q\u0000~\u0000+q\u0000~\u00001sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0014pq\u0000~\u0000\u0018sq\u0000~\u0000,t\u0000\u0005ctypeq\u0000~\u0000+q\u0000~\u00001s"
+"q\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0014pq\u0000~\u0000Fsq\u0000~\u0000,t\u0000\u0003ridq\u0000~\u0000+q\u0000~\u00001sq\u0000~\u0000\u0011ppq\u0000~\u0000\u0018s"
+"q\u0000~\u0000,t\u0000\u0002idq\u0000~\u0000+sr\u0000!com.sun.msv.grammar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\u000fppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003"
+"xq\u0000~\u0000\u0004q\u0000~\u0000\u0014psq\u0000~\u0000\u0015q\u0000~\u0000\u0014psq\u0000~\u0000\u001aq\u0000~\u0000!t\u0000\u0006stringsr\u00005com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$\u0001q"
+"\u0000~\u0000\'sq\u0000~\u0000(q\u0000~\u0000`q\u0000~\u0000!q\u0000~\u00001sq\u0000~\u0000\u000fppsq\u0000~\u0000[q\u0000~\u0000\u0014psq\u0000~\u0000\u0000q\u0000~\u0000\u0014p\u0000sq"
+"\u0000~\u0000\u000fppsq\u0000~\u0000[q\u0000~\u0000\u0014psq\u0000~\u0000\u0011q\u0000~\u0000\u0014psr\u00002com.sun.msv.grammar.Expres"
+"sion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u00002q\u0000~\u0000ksr\u0000 com.s"
+"un.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000-q\u0000~\u00001sq\u0000~\u0000,t\u0000,co"
+"m.sun.tt.filters.xliffsubsegment.xliff.Subt\u0000+http://java.sun"
+".com/jaxb/xjc/dummy-elementsq\u0000~\u00001sq\u0000~\u0000,t\u0000\u0002itq\u0000~\u0000+sr\u0000\"com.sun"
+".msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun"
+"/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gra"
+"mmar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVe"
+"rsionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u000f\u0001"
+"pq\u0000~\u0000\fq\u0000~\u0000\rq\u0000~\u0000\tq\u0000~\u0000Mq\u0000~\u0000dq\u0000~\u0000Yq\u0000~\u0000Dq\u0000~\u0000gq\u0000~\u0000eq\u0000~\u0000\u000bq\u0000~\u0000hq\u0000~\u0000"
+"Qq\u0000~\u0000\u0010q\u0000~\u0000\nq\u0000~\u0000\u000ex"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context) {
            super(context, "---------------------");
        }

        protected Unmarshaller(org.jvnet.olt.filters.xliffsubsegment.xliff.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.jvnet.olt.filters.xliffsubsegment.xliff.impl.ItImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        attIdx = context.getAttribute("", "rid");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "crc");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "ctype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  19 :
                        if (("sub" == ___local)&&("" == ___uri)) {
                            _getContent().add(((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.SubImpl) spawnChildFromEnterElement((org.jvnet.olt.filters.xliffsubsegment.xliff.impl.SubImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "pos");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        if (("it" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 19;
                            continue outer;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "ts");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  20 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Rid = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Crc = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Ctype = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Ts = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        attIdx = context.getAttribute("", "rid");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "crc");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "ctype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  19 :
                        if (("it" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 20;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "pos");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 19;
                            continue outer;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "ts");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  20 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        if (("rid" == ___local)&&("" == ___uri)) {
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  7 :
                        if (("crc" == ___local)&&("" == ___uri)) {
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  10 :
                        if (("ctype" == ___local)&&("" == ___uri)) {
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  4 :
                        if (("pos" == ___local)&&("" == ___uri)) {
                            state = 5;
                            return ;
                        }
                        break;
                    case  16 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 17;
                            return ;
                        }
                        break;
                    case  1 :
                        if (("ts" == ___local)&&("" == ___uri)) {
                            state = 2;
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  20 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("ts" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "rid");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "crc");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "ctype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  18 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("pos" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("ctype" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "pos");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        if (("rid" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 19;
                            continue outer;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "ts");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  20 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        if (("crc" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  13 :
                            attIdx = context.getAttribute("", "rid");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 16;
                                continue outer;
                            }
                            state = 16;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "crc");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 10;
                                continue outer;
                            }
                            state = 10;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "ctype");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 13;
                                continue outer;
                            }
                            state = 13;
                            continue outer;
                        case  19 :
                            eatText6(value);
                            state = 19;
                            return ;
                        case  8 :
                            eatText2(value);
                            state = 9;
                            return ;
                        case  14 :
                            eatText1(value);
                            state = 15;
                            return ;
                        case  2 :
                            eatText5(value);
                            state = 3;
                            return ;
                        case  17 :
                            eatText4(value);
                            state = 18;
                            return ;
                        case  4 :
                            attIdx = context.getAttribute("", "pos");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  5 :
                            if (___dt0 .isValid(value, null)) {
                                eatText7(value);
                                state = 6;
                                return ;
                            }
                            if (___dt1 .isValid(value, null)) {
                                eatText8(value);
                                state = 6;
                                return ;
                            }
                            break;
                        case  11 :
                            eatText3(value);
                            state = 12;
                            return ;
                        case  16 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 19;
                                continue outer;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "ts");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 4;
                                continue outer;
                            }
                            state = 4;
                            continue outer;
                        case  20 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getContent().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Pos = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Pos = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
