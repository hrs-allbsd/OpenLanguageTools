/*
* CDDL HEADER START
*
* The contents of this file are subject to the terms of the
* Common Development and Distribution License (the "License").
* You may not use this file except in compliance with the License.
*
* You can obtain a copy of the license at LICENSE.txt
* or http://www.opensource.org/licenses/cddl1.php.
* See the License for the specific language governing permissions
* and limitations under the License.
*
* When distributing Covered Code, include this CDDL HEADER in each
* file and include the License file at LICENSE.txt.
* If applicable, add the following below this CDDL HEADER, with the
* fields enclosed by brackets "[]" replaced with your own identifying
* information: Portions Copyright [yyyy] [name of copyright owner]
*
* CDDL HEADER END
*/

/*
 * Copyright  2005 Sun Microsystems, Inc. 
 * All rights reserved Use is subject to license terms.
 *
 */

/*
 * FontQueryDialog.java
 *
 * Created on May 3, 2004, 4:44 PM
 */

package org.jvnet.olt.editor.translation;

import java.awt.Font;
import java.awt.Frame;
import javax.swing.ButtonModel;
import javax.swing.JDialog;
import javax.swing.JFrame;

/** This class provides the UI to allow Editor users to select from one of three
 * preset font sizes for text being edited. It also encapsulates these three font
 * size settings, so that any changes needed will be localized to this class.
 * @author  jc73554
 */
public class FontQueryDialog extends JDialog {
    
    /** Creates new form FontQueryDialog */
    public FontQueryDialog(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        samplePanel = new javax.swing.JPanel();
        sampleLabel = new javax.swing.JLabel();
        optionsPanel = new javax.swing.JPanel();
        radioSmallText = new javax.swing.JRadioButton();
        radioMediumText = new javax.swing.JRadioButton();
        radioLargeText = new javax.swing.JRadioButton();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setTitle(org.jvnet.olt.editor.util.Bundle.getBundle("org/jvnet/olt/editor/translation/FontQueryDialog").getString("Select_Font_Size_Option"));
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        mainPanel.setLayout(new java.awt.BorderLayout());

        mainPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5)));
        samplePanel.setLayout(new java.awt.BorderLayout());

        samplePanel.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder(org.jvnet.olt.editor.util.Bundle.getBundle("org/jvnet/olt/editor/translation/FontQueryDialog").getString("Sample")), new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5))));
        sampleLabel.setBackground(new java.awt.Color(255, 255, 255));
        sampleLabel.setFont(new java.awt.Font("Dialog", Font.BOLD, 24));
        sampleLabel.setText(org.jvnet.olt.editor.util.Bundle.getBundle("org/jvnet/olt/editor/translation/FontQueryDialog").getString("Sample_text"));
        sampleLabel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(0, 20, 0, 0)));
        sampleLabel.setDoubleBuffered(true);
        sampleLabel.setFocusable(false);
        sampleLabel.setPreferredSize(new java.awt.Dimension(41, 60));
        sampleLabel.setOpaque(true);
        samplePanel.add(sampleLabel, java.awt.BorderLayout.CENTER);

        mainPanel.add(samplePanel, java.awt.BorderLayout.SOUTH);

        optionsPanel.setLayout(new javax.swing.BoxLayout(optionsPanel, javax.swing.BoxLayout.Y_AXIS));

        radioSmallText.setMnemonic('S');
        radioSmallText.setText(org.jvnet.olt.editor.util.Bundle.getBundle("org/jvnet/olt/editor/translation/FontQueryDialog").getString("Small_text_(12_pts)"));
        buttonGroup.add(radioSmallText);
        radioSmallText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSmallTextActionPerformed(evt);
            }
        });
        optionsPanel.add(radioSmallText);

        radioMediumText.setMnemonic('M');
        radioMediumText.setText(org.jvnet.olt.editor.util.Bundle.getBundle("org/jvnet/olt/editor/translation/FontQueryDialog").getString("Medium_text_(18_pts)"));
        buttonGroup.add(radioMediumText);
        radioMediumText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMediumTextActionPerformed(evt);
            }
        });
        optionsPanel.add(radioMediumText);

        radioLargeText.setMnemonic('L');
        radioLargeText.setText(org.jvnet.olt.editor.util.Bundle.getBundle("org/jvnet/olt/editor/translation/FontQueryDialog").getString("Large_text_(24_pts)"));
        buttonGroup.add(radioLargeText);
        radioLargeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioLargeTextActionPerformed(evt);
            }
        });
        optionsPanel.add(radioLargeText);

        mainPanel.add(optionsPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        buttonPanel.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        buttonPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5)));
        okButton.setMnemonic('O');
        okButton.setText(org.jvnet.olt.editor.util.Bundle.getBundle("org/jvnet/olt/editor/translation/FontQueryDialog").getString("OK"));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(okButton);

        cancelButton.setMnemonic('C');
        cancelButton.setText(org.jvnet.olt.editor.util.Bundle.getBundle("org/jvnet/olt/editor/translation/FontQueryDialog").getString("Cancel"));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-308)/2, (screenSize.height-254)/2, 308, 254);
    }//GEN-END:initComponents
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        cancelled = true;
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        setVisible(false);
        cancelled = false;
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void radioLargeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioLargeTextActionPerformed
        sampleLabel.setFont(new Font("Dialog",Font.PLAIN,24));
    }//GEN-LAST:event_radioLargeTextActionPerformed
    
    private void radioMediumTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMediumTextActionPerformed
        sampleLabel.setFont(new Font("Dialog",Font.PLAIN,18));
    }//GEN-LAST:event_radioMediumTextActionPerformed
    
    private void radioSmallTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSmallTextActionPerformed
        sampleLabel.setFont(new Font("Dialog",Font.PLAIN,12));
    }//GEN-LAST:event_radioSmallTextActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        cancelled = true;
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FontQueryDialog dlg = new FontQueryDialog(new JFrame(), true);
        dlg.setFontSelectionOption(FontQueryDialog.MEDIUMFONT);
        dlg.show();
        
        if(dlg.wasCancelled()) {
            System.out.println("Font selection was cancelled.");
        } else {
            System.out.println("Font selection was made:" + dlg.getFontSelectionOption());
        }
        
        System.exit(0);
    }
    
    
    /** This method can be queried to see if the user closed the dialog with the
     * Cancel button.
     */
    public boolean wasCancelled() {
        return cancelled;
    }
    
    /** This method returns what the user's selected option.
     */
    public int getFontSelectionOption() {
        ButtonModel selected = buttonGroup.getSelection();
        
        if(selected.equals(radioSmallText.getModel())) { return 1; }
        if(selected.equals(radioMediumText.getModel())) { return 2; }
        if(selected.equals(radioLargeText.getModel())) { return 3; }
        
        return 1;
    }
    
    /**
     */
    public Font getFontSizeSelection() {
        
        int newFontSizeSelection = getFontSelectionOption();
        
        switch(newFontSizeSelection) {
            case FontQueryDialog.SMALLFONT:
                return new Font("Dialog",Font.PLAIN,12);
            case FontQueryDialog.MEDIUMFONT:
                return new Font("Dialog",Font.PLAIN,18);                
            case FontQueryDialog.LARGEFONT:
                return new Font("Dialog",Font.PLAIN,24);
            default:
                return new Font("Dialog",Font.PLAIN,12);    // If in doubt return the small font.             
        }
    }
    
    /** This method sets the radio button selection and updates the example text.
     */
    public void setFontSelectionOption(int selection) {
        if((selection > 3) || (selection < 1)) {
            return;
        }
        
        ButtonModel buttonModel = null;
        switch(selection) {
            case SMALLFONT:
                buttonModel = radioSmallText.getModel();
                sampleLabel.setFont(new Font("Dialog",Font.BOLD,12));
                break;
            case MEDIUMFONT:
                buttonModel = radioMediumText.getModel();
                sampleLabel.setFont(new Font("Dialog",Font.BOLD,18));
                break;
            case LARGEFONT:
                buttonModel = radioLargeText.getModel();
                sampleLabel.setFont(new Font("Dialog",Font.BOLD,24));
                break;
        }
        
        if(buttonModel != null) {
            buttonGroup.setSelected(buttonModel, true);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JRadioButton radioLargeText;
    private javax.swing.JRadioButton radioMediumText;
    private javax.swing.JRadioButton radioSmallText;
    private javax.swing.JLabel sampleLabel;
    private javax.swing.JPanel samplePanel;
    // End of variables declaration//GEN-END:variables
    
    private boolean cancelled;
    
    public static final int SMALLFONT = 1;
    
    public static final int MEDIUMFONT = 2;
    
    public static final int LARGEFONT = 3;
    
}
