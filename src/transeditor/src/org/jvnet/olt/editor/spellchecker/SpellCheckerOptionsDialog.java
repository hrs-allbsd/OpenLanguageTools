/*
* CDDL HEADER START
*
* The contents of this file are subject to the terms of the
* Common Development and Distribution License (the "License").
* You may not use this file except in compliance with the License.
*
* You can obtain a copy of the license at LICENSE.txt
* or http://www.opensource.org/licenses/cddl1.php.
* See the License for the specific language governing permissions
* and limitations under the License.
*
* When distributing Covered Code, include this CDDL HEADER in each
* file and include the License file at LICENSE.txt.
* If applicable, add the following below this CDDL HEADER, with the
* fields enclosed by brackets "[]" replaced with your own identifying
* information: Portions Copyright [yyyy] [name of copyright owner]
*
* CDDL HEADER END
*/
/*
 * SpellCheckerOptionsDialog.java
 *
 * Created on December 13, 2006, 3:06 PM
 */

package org.jvnet.olt.editor.spellchecker;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Frame;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import org.jvnet.olt.editor.util.Bundle;

/**
 *
 * @author  boris
 */
public class SpellCheckerOptionsDialog extends javax.swing.JDialog {
    private Bundle bundle = Bundle.getBundle(SpellCheckerOptionsDialog.class.getName());

            
    class ModelAdapter {
        final SpellChecker sc;
        
        ModelAdapter(SpellChecker sc){
            this.sc = sc;
        }
        
        public String toString(){
            return sc.getDisplayName();
        }
        
        SpellChecker getSpellChecker(){
            return sc;
        }
        
        
    }
    
    private String defaultSpellCheckerName;
    
    /**
     * Creates new form SpellCheckerOptionsDialog
     */
    public SpellCheckerOptionsDialog(Frame owner,boolean modal) {
        super(owner,modal);
        
        initComponents();
    }
    
    public void setDefaultSpellCheckerName(String defSpellChecker){
        this.defaultSpellCheckerName = defSpellChecker;
    }

    public String getDefaultSpellCheckerName(){
        return this.defaultSpellCheckerName;
    }
    
    public void setSpellCheckers(SpellChecker[] checkers){
        Vector<ModelAdapter> v = new Vector<ModelAdapter>();


        ModelAdapter defaultItem = null;
        for(SpellChecker s:checkers){
            ModelAdapter adapter = new ModelAdapter(s);
            v.add(adapter);
            
            if(defaultSpellCheckerName != null && defaultSpellCheckerName.equals(s.getName())){
                defaultItem = adapter;
            }
        }
        
        DefaultComboBoxModel model = new DefaultComboBoxModel(v);
        
        spellCheckerCombo.setModel(model);
        
        if(defaultItem != null)
            spellCheckerCombo.setSelectedItem(defaultItem);
        
        
        defaultSpellCheckerCheckBox.setEnabled(! v.isEmpty() );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spellCheckerCustomizerPanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        topPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spellCheckerCombo = new javax.swing.JComboBox();
        defaultSpellCheckerCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(bundle.getString("SpellChecker_options")); // NOI18N
        setBackground(java.awt.Color.lightGray);
        setName("Form"); // NOI18N
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                formAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout(10, 10));

        spellCheckerCustomizerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        spellCheckerCustomizerPanel.setMinimumSize(new java.awt.Dimension(300, 400));
        spellCheckerCustomizerPanel.setName("spellCheckerCustomizerPanel"); // NOI18N
        spellCheckerCustomizerPanel.setPreferredSize(new java.awt.Dimension(600, 400));
        spellCheckerCustomizerPanel.setLayout(new java.awt.BorderLayout());
        getContentPane().add(spellCheckerCustomizerPanel, java.awt.BorderLayout.CENTER);

        rightPanel.setName("rightPanel"); // NOI18N
        rightPanel.setLayout(new java.awt.BorderLayout());

        closeButton.setText(bundle.getString("Close")); // NOI18N
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        rightPanel.add(closeButton, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(rightPanel, java.awt.BorderLayout.LINE_END);

        topPanel.setMaximumSize(null);
        topPanel.setMinimumSize(null);
        topPanel.setName("topPane"); // NOI18N
        topPanel.setPreferredSize(null);
        topPanel.setLayout(new javax.swing.BoxLayout(topPanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText(bundle.getString("Spellchecker")); // NOI18N
        jLabel1.setMaximumSize(null);
        jLabel1.setMinimumSize(null);
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.setPreferredSize(null);
        topPanel.add(jLabel1);

        spellCheckerCombo.setBorder(null);
        spellCheckerCombo.setMaximumSize(null);
        spellCheckerCombo.setMinimumSize(new java.awt.Dimension(100, 18));
        spellCheckerCombo.setName("spellCheckerCombo"); // NOI18N
        spellCheckerCombo.setPreferredSize(new java.awt.Dimension(100, 22));
        spellCheckerCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                spellCheckerComboItemStateChanged(evt);
            }
        });
        spellCheckerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spellCheckerComboActionPerformed(evt);
            }
        });
        topPanel.add(spellCheckerCombo);

        defaultSpellCheckerCheckBox.setText(bundle.getString("default")); // NOI18N
        defaultSpellCheckerCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        defaultSpellCheckerCheckBox.setMargin(new java.awt.Insets(3, 5, 3, 5));
        defaultSpellCheckerCheckBox.setMaximumSize(null);
        defaultSpellCheckerCheckBox.setMinimumSize(null);
        defaultSpellCheckerCheckBox.setName("defaultSpellCheckerCheckBox"); // NOI18N
        defaultSpellCheckerCheckBox.setPreferredSize(null);
        defaultSpellCheckerCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultSpellCheckerCheckBoxActionPerformed(evt);
            }
        });
        topPanel.add(defaultSpellCheckerCheckBox);

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-670)/2, (screenSize.height-539)/2, 670, 539);
    }// </editor-fold>//GEN-END:initComponents
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
// TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed
    
private void defaultSpellCheckerCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultSpellCheckerCheckBoxActionPerformed
    Object o = spellCheckerCombo.getSelectedItem();
    if(o == null)
        return;
    
    ModelAdapter adapter = (ModelAdapter)o;
    this.defaultSpellCheckerName = adapter.getSpellChecker().getName();
    // TODO add your handling code here:
}//GEN-LAST:event_defaultSpellCheckerCheckBoxActionPerformed

private void spellCheckerComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_spellCheckerComboItemStateChanged
    // TODO add your handling code here:
}//GEN-LAST:event_spellCheckerComboItemStateChanged

private void spellCheckerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spellCheckerComboActionPerformed
    Object o = spellCheckerCombo.getSelectedItem();
    if(o == null)
        return;
    
    ModelAdapter adapter = (ModelAdapter)o;
    
    JComponent customizer = adapter.getSpellChecker().getCustomizer();
    for(Component c : spellCheckerCustomizerPanel.getComponents())
        spellCheckerCustomizerPanel.remove(c);
    
    if(customizer != null){
        spellCheckerCustomizerPanel.setMinimumSize(customizer.getMinimumSize());
        spellCheckerCustomizerPanel.setPreferredSize(customizer.getPreferredSize());
        spellCheckerCustomizerPanel.add(customizer,BorderLayout.CENTER);
        spellCheckerCustomizerPanel.revalidate();        
    }
    defaultSpellCheckerCheckBox.setSelected(adapter.getSpellChecker().getName().equals(defaultSpellCheckerName));
    this.doLayout();
    this.setSize(this.getPreferredSize());
    
}//GEN-LAST:event_spellCheckerComboActionPerformed

private void formAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorMoved

}//GEN-LAST:event_formAncestorMoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JCheckBox defaultSpellCheckerCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JComboBox spellCheckerCombo;
    private javax.swing.JPanel spellCheckerCustomizerPanel;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
    
}
