/*
 * SpellCheckerOptionsDialog.java
 *
 * Created on December 13, 2006, 3:06 PM
 */

package org.jvnet.olt.editor.spellchecker;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Frame;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import org.jvnet.olt.editor.util.Bundle;

/**
 *
 * @author  boris
 */
public class SpellCheckerOptionsDialog extends javax.swing.JDialog {
    private Bundle bundle = Bundle.getBundle(SpellCheckerOptionsDialog.class.getName());

            
    class ModelAdapter {
        final SpellChecker sc;
        
        ModelAdapter(SpellChecker sc){
            this.sc = sc;
        }
        
        public String toString(){
            return sc.getDisplayName();
        }
        
        SpellChecker getSpellChecker(){
            return sc;
        }
        
        
    }
    
    private String defaultSpellCheckerName;
    
    /**
     * Creates new form SpellCheckerOptionsDialog
     */
    public SpellCheckerOptionsDialog(Frame owner,boolean modal) {
        super(owner,modal);
        
        initComponents();
    }
    
    public void setDefaultSpellCheckerName(String defSpellChecker){
        this.defaultSpellCheckerName = defSpellChecker;
    }

    public String getDefaultSpellCheckerName(){
        return this.defaultSpellCheckerName;
    }
    
    public void setSpellCheckers(SpellChecker[] checkers){
        Vector<ModelAdapter> v = new Vector<ModelAdapter>();


        ModelAdapter defaultItem = null;
        for(SpellChecker s:checkers){
            ModelAdapter adapter = new ModelAdapter(s);
            v.add(adapter);
            
            if(defaultSpellCheckerName != null && defaultSpellCheckerName.equals(s.getName())){
                defaultItem = adapter;
            }
        }
        
        DefaultComboBoxModel model = new DefaultComboBoxModel(v);
        
        spellCheckerCombo.setModel(model);
        
        if(defaultItem != null)
            spellCheckerCombo.setSelectedItem(defaultItem);
        
        
        defaultSpellCheckerCheckBox.setEnabled(! v.isEmpty() );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        spellCheckerCombo = new javax.swing.JComboBox();
        defaultSpellCheckerCheckBox = new javax.swing.JCheckBox();
        spellCheckerCustomizerPanel = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(bundle.getString("SpellChecker_options")); // NOI18N

        jLabel1.setText(bundle.getString("Spellchecker")); // NOI18N

        spellCheckerCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                spellCheckerComboItemStateChanged(evt);
            }
        });
        spellCheckerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spellCheckerComboActionPerformed(evt);
            }
        });

        defaultSpellCheckerCheckBox.setText(bundle.getString("default")); // NOI18N
        defaultSpellCheckerCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        defaultSpellCheckerCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        defaultSpellCheckerCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultSpellCheckerCheckBoxActionPerformed(evt);
            }
        });

        spellCheckerCustomizerPanel.setLayout(new java.awt.BorderLayout());

        closeButton.setText(bundle.getString("Close")); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(spellCheckerCombo, 0, 230, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(defaultSpellCheckerCheckBox)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(spellCheckerCustomizerPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .addContainerGap(171, Short.MAX_VALUE)
                .add(closeButton)
                .addContainerGap(170, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(defaultSpellCheckerCheckBox)
                    .add(spellCheckerCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(14, 14, 14)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(spellCheckerCustomizerPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .add(13, 13, 13)
                .add(closeButton)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
// TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed
    
private void defaultSpellCheckerCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultSpellCheckerCheckBoxActionPerformed
    Object o = spellCheckerCombo.getSelectedItem();
    if(o == null)
        return;
    
    ModelAdapter adapter = (ModelAdapter)o;
    this.defaultSpellCheckerName = adapter.getSpellChecker().getName();
    // TODO add your handling code here:
}//GEN-LAST:event_defaultSpellCheckerCheckBoxActionPerformed

private void spellCheckerComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_spellCheckerComboItemStateChanged
    // TODO add your handling code here:
}//GEN-LAST:event_spellCheckerComboItemStateChanged

private void spellCheckerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spellCheckerComboActionPerformed
    Object o = spellCheckerCombo.getSelectedItem();
    if(o == null)
        return;
    
    ModelAdapter adapter = (ModelAdapter)o;
    
    JComponent customizer = adapter.getSpellChecker().getCustomizer();
    for(Component c : spellCheckerCustomizerPanel.getComponents())
        spellCheckerCustomizerPanel.remove(c);
    
    if(customizer != null){        
        spellCheckerCustomizerPanel.add(customizer,BorderLayout.CENTER);
        spellCheckerCustomizerPanel.revalidate();        
    }
    
    defaultSpellCheckerCheckBox.setSelected(adapter.getSpellChecker().getName().equals(defaultSpellCheckerName));
    
}//GEN-LAST:event_spellCheckerComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JCheckBox defaultSpellCheckerCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox spellCheckerCombo;
    private javax.swing.JPanel spellCheckerCustomizerPanel;
    // End of variables declaration//GEN-END:variables
    
}
