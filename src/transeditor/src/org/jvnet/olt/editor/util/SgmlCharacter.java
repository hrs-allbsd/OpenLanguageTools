/*
* CDDL HEADER START
*
* The contents of this file are subject to the terms of the
* Common Development and Distribution License (the "License").
* You may not use this file except in compliance with the License.
*
* You can obtain a copy of the license at LICENSE.txt
* or http://www.opensource.org/licenses/cddl1.php.
* See the License for the specific language governing permissions
* and limitations under the License.
*
* When distributing Covered Code, include this CDDL HEADER in each
* file and include the License file at LICENSE.txt.
* If applicable, add the following below this CDDL HEADER, with the
* fields enclosed by brackets "[]" replaced with your own identifying
* information: Portions Copyright [yyyy] [name of copyright owner]
*
* CDDL HEADER END
*/
/*
 * Copyright  2005 Sun Microsystems, Inc.
 * All rights reserved Use is subject to license terms.
 *
 */
package org.jvnet.olt.editor.util;

import java.util.*;


public class SgmlCharacter {
    /*
        public static void main(String args[]) {
        System.out.println("before search");
        System.out.println(SgmlCharacter.getEntityName(new Character('\u2212')));
        System.out.println(SgmlCharacter.getUnicode("&;"));
        System.out.println("after search");

        }
    */
    static final Object[][] mapping = {
        { new Character('\u2002'), "&ensp;" },
        { new Character('\u2003'), "&emsp;" },
        { new Character('\u2004'), "&emsp13;" },
        { new Character('\u2005'), "&emsp14;" },
        { new Character('\u2007'), "&numsp;" },
        { new Character('\u2008'), "&puncsp;" },
        { new Character('\u2009'), "&thinsp;" },
        { new Character('\u200A'), "&hairsp;" },
        { new Character('\u2010'), "&dash;" },
        { new Character('\u2013'), "&ndash;" },
        { new Character('\u2014'), "&mdash;" },
        { new Character('\u2015'), "&horbar;" },
        { new Character('\u2016'), "&Verbar;" },
        { new Character('\u2018'), "&lsquo;" },
        { new Character('\u2018'), "&rsquor;" },
        { new Character('\u2019'), "&rsquo;" },
        { new Character('\u201A'), "&lsquor;" },
        { new Character('\u201C'), "&ldquo;" },
        // {new Character('\u201C'), "&rdquor;"},
        {new Character('\u201D'), "&rdquo;" },
        { new Character('\u201E'), "&ldquor;" },
        { new Character('\u2020'), "&dagger;" },
        { new Character('\u2021'), "&Dagger;" },
        { new Character('\u2022'), "&bull;" },
        { new Character('\u2025'), "&nldr;" },
        { new Character('\u2026'), "&hellip;" },
        { new Character('\u2030'), "&permil;" },
        { new Character('\u2032'), "&prime;" },
        { new Character('\u2032'), "&vprime;" },
        { new Character('\u2033'), "&Prime;" },
        { new Character('\u2034'), "&tprime;" },
        { new Character('\u2035'), "&bprime;" },
        { new Character('\u2041'), "&caret;" },
        { new Character('\u2043'), "&hybull;" },
        { new Character('\u20D2'), "&;" },
        { new Character('\u20D3'), "&;" },
        { new Character('\u20D4'), "&;" },
        { new Character('\u20D5'), "&;" },
        { new Character('\u20D6'), "&;" },
        { new Character('\u20D7'), "&;" },
        { new Character('\u20D8'), "&;" },
        { new Character('\u20D9'), "&;" },
        { new Character('\u20DA'), "&;" },
        { new Character('\u20DB'), "&tdot;" },
        { new Character('\u20DC'), "&DotDot;" },
        { new Character('\u2105'), "&incare;" },
        { new Character('\u210B'), "&hamilt;" },
        { new Character('\u210E'), "&;" },
        { new Character('\u210F'), "&planck;" },
        { new Character('\u2111'), "&image;" },
        { new Character('\u2112'), "&lagran;" },
        { new Character('\u2113'), "&ell;" },
        { new Character('\u2116'), "&numero;" },
        { new Character('\u2117'), "&copysr;" },
        { new Character('\u2118'), "&weierp;" },
        { new Character('\u211C'), "&real;" },
        { new Character('\u211E'), "&rx;" },
        { new Character('\u2122'), "&trade;" },
        { new Character('\u2126'), "&ohm;" },
        { new Character('\u2129'), "&;" },
        { new Character('\u212B'), "&angst;" },
        { new Character('\u212C'), "&bernou;" },
        { new Character('\u2133'), "&phmmat;" },
        { new Character('\u2134'), "&order;" },
        { new Character('\u2135'), "&aleph;" },
        { new Character('\u2136'), "&beth;" },
        { new Character('\u2137'), "&gimel;" },
        { new Character('\u2138'), "&daleth;" },
        { new Character('\u2153'), "&frac13;" },
        { new Character('\u2154'), "&frac23;" },
        { new Character('\u2155'), "&frac15;" },
        { new Character('\u2156'), "&frac25;" },
        { new Character('\u2157'), "&frac35;" },
        { new Character('\u2158'), "&frac45;" },
        { new Character('\u2159'), "&frac16;" },
        { new Character('\u215A'), "&frac56;" },
        { new Character('\u215B'), "&frac18;" },
        { new Character('\u215C'), "&frac38;" },
        { new Character('\u215D'), "&frac58;" },
        { new Character('\u215E'), "&frac78;" },
        { new Character('\u2190'), "&larr;" },
        { new Character('\u2191'), "&uarr;" },
        { new Character('\u2192'), "&rarr;" },
        { new Character('\u2193'), "&darr;" },
        { new Character('\u2194'), "&harr;" },
        { new Character('\u2195'), "&varr;" },
        { new Character('\u2196'), "&nwarr;" },
        { new Character('\u2197'), "&nearr;" },
        { new Character('\u2198'), "&drarr;" },
        { new Character('\u2199'), "&dlarr;" },
        { new Character('\u219A'), "&nlarr;" },
        { new Character('\u219B'), "&nrarr;" },
        { new Character('\u219D'), "&rarrw;" },
        { new Character('\u219E'), "&Larr;" },
        { new Character('\u21A0'), "&Rarr;" },
        { new Character('\u21A2'), "&larrtl;" },
        { new Character('\u21A3'), "&rarrtl;" },
        { new Character('\u21A6'), "&map;" },
        { new Character('\u21A9'), "&larrhk;" },
        { new Character('\u21AA'), "&rarrhk;" },
        { new Character('\u21AB'), "&larrlp;" },
        { new Character('\u21AC'), "&rarrlp;" },
        { new Character('\u21AD'), "&harrw;" },
        { new Character('\u21AE'), "&nharr;" },
        { new Character('\u21B0'), "&lsh;" },
        { new Character('\u21B1'), "&rsh;" },
        { new Character('\u21B6'), "&cularr;" },
        { new Character('\u21B7'), "&curarr;" },
        { new Character('\u21BA'), "&olarr;" },
        { new Character('\u21BB'), "&orarr;" },
        { new Character('\u21BC'), "&lharu;" },
        { new Character('\u21BD'), "&lhard;" },
        { new Character('\u21BE'), "&uharr;" },
        { new Character('\u21BF'), "&uharl;" },
        { new Character('\u21C0'), "&rharu;" },
        { new Character('\u21C1'), "&rhard;" },
        { new Character('\u21C2'), "&dharr;" },
        { new Character('\u21C3'), "&dharl;" },
        { new Character('\u21C4'), "&rlarr2;" },
        { new Character('\u21C5'), "&;" },
        { new Character('\u21C6'), "&lrarr2;" },
        { new Character('\u21C7'), "&larr2;" },
        { new Character('\u21C8'), "&uarr2;" },
        { new Character('\u21C9'), "&rarr2;" },
        { new Character('\u21CA'), "&darr2;" },
        { new Character('\u21CB'), "&lrhar2;" },
        { new Character('\u21CC'), "&rlhar2;" },
        { new Character('\u21CD'), "&nlArr;" },
        { new Character('\u21CE'), "&nhArr;" },
        { new Character('\u21CF'), "&nrArr;" },
        { new Character('\u21D0'), "&lArr;" },
        { new Character('\u21D1'), "&uArr;" },
        { new Character('\u21D2'), "&rArr;" },
        { new Character('\u21D3'), "&dArr;" },
        { new Character('\u21D4'), "&hArr,iff;" },
        { new Character('\u21D5'), "&vArr;" },
        { new Character('\u21DA'), "&lAarr;" },
        { new Character('\u21DB'), "&rAarr;" },
        { new Character('\u21DC'), "&;" },
        { new Character('\u21DD'), "&rarrw;" },
        { new Character('\u2200'), "&forall;" },
        { new Character('\u2201'), "&comp;" },
        { new Character('\u2202'), "&part;" },
        { new Character('\u2203'), "&exist;" },
        { new Character('\u2204'), "&nexist;" },
        { new Character('\u2205'), "&empty;" },
        { new Character('\u2206'), "&;" },
        { new Character('\u2207'), "&nabla;" },
        { new Character('\u2208'), "&isin;" },
        { new Character('\u2209'), "&notin;" },
        { new Character('\u220A'), "&epsis;" },
        { new Character('\u220B'), "&ni;" },
        { new Character('\u220D'), "&bepsi;" },
        { new Character('\u220E'), "&;" },
        { new Character('\u220F'), "&prod;" },
        { new Character('\u2210'), "&coprod;" },
        { new Character('\u2210'), "&amalg;" },
        { new Character('\u2210'), "&samalg;" },
        { new Character('\u2211'), "&sum;" },
        { new Character('\u2212'), "&minus;" },
        { new Character('\u2213'), "&mnplus;" },
        { new Character('\u2214'), "&plusdo;" },
        { new Character('\u2216'), "&setmn;" },
        { new Character('\u2218'), "&compfn;" },
        { new Character('\u221A'), "&radic;" },
        { new Character('\u221D'), "&vprop;" },
        { new Character('\u221D'), "&prop;" },
        { new Character('\u221E'), "&infin;" },
        { new Character('\u221F'), "&ang90;" },
        { new Character('\u2220'), "&ang;" },
        { new Character('\u2221'), "&angmsd;" },
        { new Character('\u2222'), "&angsph;" },
        { new Character('\u2223'), "&mid;" },
        { new Character('\u2224'), "&nmid;" },
        { new Character('\u2225'), "&par;" },
        { new Character('\u2226'), "&npar;" },
        { new Character('\u2227'), "&and;" },
        { new Character('\u2228'), "&or;" },
        { new Character('\u2229'), "&cap;" },
        { new Character('\u222A'), "&cup;" },
        { new Character('\u222B'), "&int;" },
        { new Character('\u222C'), "&;" },
        { new Character('\u222D'), "&;" },
        { new Character('\u222E'), "&conint;" },
        { new Character('\u2234'), "&there4;" },
        { new Character('\u2235'), "&becaus;" },
        { new Character('\u2237'), "&;" },
        { new Character('\u2238'), "&;" },
        { new Character('\u223A'), "&;" },
        { new Character('\u223B'), "&;" },
        { new Character('\u223C'), "&thksim;" },
        { new Character('\u223C'), "&sim;" },
        { new Character('\u223D'), "&bsim;" },
        { new Character('\u223E'), "&;" },
        { new Character('\u2240'), "&wreath;" },
        { new Character('\u2241'), "&nsim;" },
        { new Character('\u2243'), "&sime;" },
        { new Character('\u2244'), "&nsime;" },
        { new Character('\u2245'), "&cong;" },
        { new Character('\u2247'), "&ncong;" },
        { new Character('\u2248'), "&thkap;" },
        { new Character('\u2248'), "&ap;" },
        { new Character('\u2249'), "&nap;" },
        { new Character('\u224A'), "&ape;" },
        { new Character('\u224C'), "&bcong;" },
        { new Character('\u224D'), "&asymp;" },
        { new Character('\u224E'), "&bump;" },
        { new Character('\u224F'), "&bumpe;" },
        { new Character('\u2250'), "&esdot;" },
        { new Character('\u2251'), "&eDot;" },
        { new Character('\u2252'), "&efDot;" },
        { new Character('\u2253'), "&erDot;" },
        { new Character('\u2254'), "&colone;" },
        { new Character('\u2255'), "&ecolon;" },
        { new Character('\u2256'), "&ecir;" },
        { new Character('\u2257'), "&cire;" },
        { new Character('\u2259'), "&wedgeq;" },
        { new Character('\u225A'), "&;" },
        { new Character('\u225C'), "&trie;" },
        { new Character('\u2260'), "&ne;" },
        { new Character('\u2261'), "&equiv;" },
        { new Character('\u2262'), "&nequiv;" },
        { new Character('\u2264'), "&les;" },
        { new Character('\u2264'), "&le;" },
        { new Character('\u2265'), "&ges;" },
        { new Character('\u2265'), "&ge;" },
        { new Character('\u2266'), "&lE;" },
        { new Character('\u2267'), "&gE;" },
        { new Character('\u2268'), "&lnE;" },
        { new Character('\u2268'), "&lvnE;" },
        { new Character('\u2269'), "&gnE;" },
        { new Character('\u2269'), "&gvnE;" },
        { new Character('\u226A'), "&Lt;" },
        { new Character('\u226A'), "&;" },
        { new Character('\u226B'), "&Gt;" },
        { new Character('\u226B'), "&;" },
        { new Character('\u226C'), "&twixt;" },
        { new Character('\u226E'), "&nlt;" },
        { new Character('\u226F'), "&ngt;" },
        { new Character('\u2270'), "&nles;" },
        { new Character('\u2270'), "&nle;" },
        { new Character('\u2271'), "&nges;" },
        { new Character('\u2271'), "&nge;" },
        { new Character('\u2272'), "&lsim;" },
        { new Character('\u2273'), "&gsim;" },
        { new Character('\u2276'), "&lg;" },
        { new Character('\u2277'), "&gl;" },
        { new Character('\u227A'), "&pr;" },
        { new Character('\u227B'), "&sc;" },
        { new Character('\u227C'), "&cupre;" },
        { new Character('\u227D'), "&sccue;" },
        { new Character('\u227E'), "&prsim;" },
        { new Character('\u227F'), "&scsim;" },
        { new Character('\u2280'), "&npr;" },
        { new Character('\u2281'), "&nsc;" },
        { new Character('\u2282'), "&sub;" },
        { new Character('\u2282'), "&;" },
        { new Character('\u2283'), "&sup;" },
        { new Character('\u2283'), "&;" },
        { new Character('\u2284'), "&nsub;" },
        { new Character('\u2285'), "&nsup;" },
        { new Character('\u2286'), "&sube;" },
        { new Character('\u2287'), "&supe;" },
        { new Character('\u2288'), "&nsube;" },
        { new Character('\u2289'), "&nsupe;" },
        { new Character('\u228A'), "&subnE;" },
        { new Character('\u228B'), "&supnE;" },
        { new Character('\u228E'), "&uplus;" },
        { new Character('\u228F'), "&sqsub;" },
        { new Character('\u2290'), "&sqsup;" },
        { new Character('\u2291'), "&sqsube;" },
        { new Character('\u2292'), "&sqsupe;" },
        { new Character('\u2293'), "&sqcap;" },
        { new Character('\u2294'), "&sqcup;" },
        { new Character('\u2295'), "&oplus;" },
        { new Character('\u2296'), "&ominus;" },
        { new Character('\u2297'), "&otimes;" },
        { new Character('\u2298'), "&osol;" },
        { new Character('\u2299'), "&odot;" },
        { new Character('\u229A'), "&ocir;" },
        { new Character('\u229B'), "&oast;" },
        { new Character('\u229D'), "&odash;" },
        { new Character('\u229E'), "&plusb;" },
        { new Character('\u229F'), "&minusb;" },
        { new Character('\u22A0'), "&timesb;" },
        { new Character('\u22A1'), "&sdotb;" },
        { new Character('\u22A2'), "&vdash;" },
        { new Character('\u22A3'), "&dashv;" },
        { new Character('\u22A4'), "&top;" },
        { new Character('\u22A5'), "&bottom;" },
        { new Character('\u22A5'), "&perp;" },
        { new Character('\u22A6'), "&;" },
        { new Character('\u22A7'), "&models;" },
        { new Character('\u22A8'), "&vDash;" },
        { new Character('\u22A9'), "&Vdash;" },
        { new Character('\u22AA'), "&Vvdash;" },
        { new Character('\u22AC'), "&nvdash;" },
        { new Character('\u22AD'), "&nvDash;" },
        { new Character('\u22AE'), "&nVdash;" },
        { new Character('\u22AF'), "&nVDash;" },
        { new Character('\u22B0'), "&;" },
        { new Character('\u22B2'), "&vltri;" },
        { new Character('\u22B3'), "&vrtri;" },
        { new Character('\u22B4'), "&ltrie;" },
        { new Character('\u22B5'), "&rtrie;" },
        { new Character('\u22B6'), "&;" },
        { new Character('\u22B7'), "&;" },
        { new Character('\u22B8'), "&mumap;" },
        { new Character('\u22B9'), "&;" },
        { new Character('\u22BA'), "&intcal;" },
        { new Character('\u22BB'), "&veebar;" },
        { new Character('\u22BC'), "&barwed;" },
        { new Character('\u22C0'), "&;" },
        { new Character('\u22C1'), "&;" },
        { new Character('\u22C2'), "&;" },
        { new Character('\u22C3'), "&;" },
        { new Character('\u22C4'), "&diam;" },
        { new Character('\u22C5'), "&sdot;" },
        { new Character('\u22C6'), "&sstarf;" },
        { new Character('\u22C7'), "&divonx;" },
        { new Character('\u22C8'), "&bowtie;" },
        { new Character('\u22C9'), "&ltimes;" },
        { new Character('\u22CA'), "&rtimes;" },
        { new Character('\u22CB'), "&lthree;" },
        { new Character('\u22CC'), "&rthree;" },
        { new Character('\u22CD'), "&bsime;" },
        { new Character('\u22CE'), "&cuvee;" },
        { new Character('\u22CF'), "&cuwed;" },
        { new Character('\u22D0'), "&Sub;" },
        { new Character('\u22D1'), "&Sup;" },
        { new Character('\u22D2'), "&Cap;" },
        { new Character('\u22D3'), "&Cup;" },
        { new Character('\u22D4'), "&fork;" },
        { new Character('\u22D6'), "&ldot;" },
        { new Character('\u22D7'), "&gsdot;" },
        { new Character('\u22D8'), "&Ll;" },
        { new Character('\u22D9'), "&Gg;" },
        { new Character('\u22DA'), "&leg;" },
        { new Character('\u22DB'), "&gel;" },
        { new Character('\u22DC'), "&els;" },
        { new Character('\u22DD'), "&egs;" },
        { new Character('\u22DE'), "&cuepr;" },
        { new Character('\u22DF'), "&cuesc;" },
        { new Character('\u22E0'), "&npre;" },
        { new Character('\u22E1'), "&nsce;" },
        { new Character('\u22E6'), "&lnsim;" },
        { new Character('\u22E7'), "&gnsim;" },
        { new Character('\u22E8'), "&prnsim;" },
        { new Character('\u22E9'), "&scnsim;" },
        { new Character('\u22EA'), "&nltri;" },
        { new Character('\u22EB'), "&nrtri;" },
        { new Character('\u22EC'), "&nltrie;" },
        { new Character('\u22ED'), "&nrtrie;" },
        { new Character('\u22EE'), "&vellip;" },
        { new Character('\u2306'), "&Barwed;" },
        { new Character('\u2307'), "&;" },
        { new Character('\u2308'), "&lceil;" },
        { new Character('\u2309'), "&rceil;" },
        { new Character('\u230A'), "&lfloor;" },
        { new Character('\u230B'), "&rfloor;" },
        { new Character('\u230C'), "&drcrop;" },
        { new Character('\u230D'), "&dlcrop;" },
        { new Character('\u230E'), "&urcrop;" },
        { new Character('\u230F'), "&ulcrop;" },
        { new Character('\u2315'), "&telrec;" },
        { new Character('\u2316'), "&target;" },
        { new Character('\u231C'), "&ulcorn;" },
        { new Character('\u231D'), "&urcorn;" },
        { new Character('\u231E'), "&dlcorn;" },
        { new Character('\u231F'), "&drcorn;" },
        { new Character('\u2322'), "&frown;" },
        { new Character('\u2323'), "&smile;" },
        { new Character('\u2329'), "&lang;" },
        { new Character('\u232A'), "&rang;" },
        { new Character('\u2423'), "&blank;" },
        { new Character('\u24C8'), "&oS;" },
        { new Character('\u2500'), "&boxh;" },
        { new Character('\u2502'), "&boxv;" },
        { new Character('\u250C'), "&boxdr;" },
        { new Character('\u2510'), "&boxdl;" },
        { new Character('\u2514'), "&boxur;" },
        { new Character('\u2518'), "&boxul;" },
        { new Character('\u251C'), "&boxvr;" },
        { new Character('\u2524'), "&boxvl;" },
        { new Character('\u252C'), "&boxhd;" },
        { new Character('\u2534'), "&boxhu;" },
        { new Character('\u253C'), "&boxvh;" },
        { new Character('\u2550'), "&boxH;" },
        { new Character('\u2551'), "&boxV;" },
        { new Character('\u2552'), "&boxdR;" },
        { new Character('\u2553'), "&boxDr;" },
        { new Character('\u2554'), "&boxDR;" },
        { new Character('\u2555'), "&boxdL;" },
        { new Character('\u2556'), "&boxDl;" },
        { new Character('\u2557'), "&boxDL;" },
        { new Character('\u2558'), "&boxuR;" },
        { new Character('\u2559'), "&boxUr;" },
        { new Character('\u255A'), "&boxUR;" },
        { new Character('\u255B'), "&boxuL;" },
        { new Character('\u255C'), "&boxUl;" },
        { new Character('\u255D'), "&boxUL;" },
        { new Character('\u255E'), "&boxvR;" },
        { new Character('\u255F'), "&boxVr;" },
        { new Character('\u2560'), "&boxVR;" },
        { new Character('\u2561'), "&boxvL;" },
        { new Character('\u2562'), "&boxVl;" },
        { new Character('\u2563'), "&boxVL;" },
        { new Character('\u2564'), "&boxHd;" },
        { new Character('\u2565'), "&boxhD;" },
        { new Character('\u2566'), "&boxHD;" },
        { new Character('\u2567'), "&boxHu;" },
        { new Character('\u2568'), "&boxhU;" },
        { new Character('\u2569'), "&boxHU;" },
        { new Character('\u256A'), "&boxvH;" },
        { new Character('\u256B'), "&boxVh;" },
        { new Character('\u256C'), "&boxVH;" },
        { new Character('\u2571'), "&;" },
        { new Character('\u2572'), "&;" },
        { new Character('\u2580'), "&uhblk;" },
        { new Character('\u2584'), "&lhblk;" },
        { new Character('\u2588'), "&block;" },
        { new Character('\u2591'), "&blk14;" },
        { new Character('\u2592'), "&blk12;" },
        { new Character('\u2593'), "&blk34;" },
        { new Character('\u25A1'), "&squ,square;" },
        { new Character('\u25AA'), "&squf;" },
        { new Character('\u25AD'), "&rect;" },
        { new Character('\u25AE'), "&marker;" },
        { new Character('\u25B1'), "&;" },
        { new Character('\u25B3'), "&xutri;" },
        { new Character('\u25B4'), "&utrif;" },
        { new Character('\u25B5'), "&utri;" },
        { new Character('\u25B7'), "&;" },
        { new Character('\u25B8'), "&rtrif;" },
        { new Character('\u25B9'), "&rtri;" },
        { new Character('\u25BD'), "&xdtri;" },
        { new Character('\u25BE'), "&dtrif;" },
        { new Character('\u25BF'), "&dtri;" },
        { new Character('\u25C1'), "&;" },
        { new Character('\u25C2'), "&ltrif;" },
        { new Character('\u25C3'), "&ltri;" },
        { new Character('\u25CA'), "&;" },
        { new Character('\u25CB'), "&cir;" },
        { new Character('\u25CB'), "&xcirc;" },
        { new Character('\u25CF'), "&;" },
        { new Character('\u2605'), "&starf;" },
        { new Character('\u2606'), "&star;" },
        { new Character('\u260E'), "&phone;" },
        { new Character('\u2640'), "&female;" },
        { new Character('\u2642'), "&male;" },
        { new Character('\u2660'), "&spades;" },
        { new Character('\u2661'), "&hearts;" },
        { new Character('\u2662'), "&diams;" },
        { new Character('\u2663'), "&clubs;" },
        { new Character('\u266A'), "&sung;" },
        { new Character('\u266D'), "&flat;" },
        { new Character('\u266E'), "&natur;" },
        { new Character('\u266F'), "&sharp;" },
        { new Character('\u2713'), "&check;" },
        { new Character('\u2717'), "&cross;" },
        { new Character('\u2720'), "&malt;" },
        { new Character('\u2726'), "&lozf;" },
        { new Character('\u2727'), "&loz;" },
        { new Character('\u2736'), "&sextile;" },
    };
    static Hashtable maptable1 = null;
    static Hashtable maptable2 = null;

    static {
        maptable1 = new Hashtable(mapping.length);
        maptable2 = new Hashtable(mapping.length);

        for (int i = 0; i < mapping.length; i++) {
            maptable1.put(mapping[i][0], mapping[i][1]);
            maptable2.put(mapping[i][1], mapping[i][0]);
        }
    }

    public static String getEntityName(char unicode) {
        return (String)maptable1.get(new Character(unicode));
    }

    public static Character getUnicode(String s) {
        return (Character)maptable2.get(s);
    }

    public static boolean isEntity(String s) {
        if (maptable2.containsKey(s)) {
            return true;
        } else {
            return false;
        }
    }

    public static boolean isEntityUnicode(char c) {
        if ((c >= '\u2000') && (c <= '\u27ff')) {
            if (maptable1.containsKey(new Character(c))) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    //    public static boolean isLowerASCII(char c) {
    //	if((c >= '\ue000') && (c <= '\ue01f')) {
    //	    return true;
    //	} 
    //	else return false;
    //    }
    //
    //    public static boolean isLessThan(char c) {
    //	if(c == '\u3d3c') return true;
    //	else return false;
    //    }
    //    public static boolean isGreaterThan(char c) {
    //	if(c == '\u3d3e') return true;
    //	else return false;
    //    }
}
